Nonterminals useless in grammar

   relation_expr


Terminals unused in grammar

   FOREACH
   IN


State 0 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: functions

    2 functions: %empty
    3          | functions function
    4          | function

    5 params: BEGIN_PARAMS declarations END_PARAMS

    6 locals: BEGIN_LOCALS declarations END_LOCALS

    7 body: BEGIN_BODY statements END_BODY

    8 function: FUNCTION IDENT SEMICOLON params locals body

    9 declarations: declarations SEMICOLON
   10             | %empty
   11             | declarations SEMICOLON declaration
   12             | declaration

   13 declaration: IDENT COMMA declaration
   14            | IDENT COLON INTEGER
   15            | IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   16            | IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

   17 statements: statements SEMICOLON
   18           | %empty
   19           | statements SEMICOLON statement
   20           | statement

   21 statement: var ASSIGN expression
   22          | IF bool-expr THEN statements ENDIF
   23          | IF bool-expr THEN statements ELSE statements ENDIF
   24          | WHILE bool-expr BEGINLOOP statements ENDLOOP
   25          | DO BEGINLOOP statements ENDLOOP WHILE bool-expr
   26          | FOR var ASSIGN NUMBER SEMICOLON bool-expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP
   27          | READ vars
   28          | WRITE vars
   29          | CONTINUE
   30          | RETURN expression

   31 term: var
   32     | NUMBER
   33     | IDENT L_PAREN expression_chain R_PAREN
   34     | SUB var
   35     | SUB NUMBER
   36     | SUB L_PAREN expression R_PAREN
   37     | SUB IDENT L_PAREN expression_chain R_PAREN

   38 multiplicative_expression_0: multiplicative_expression

   39 multiplicative_expression: term MULT multiplicative_expression_0
   40                          | term DIV multiplicative_expression_0
   41                          | term MOD multiplicative_expression_0
   42                          | term

   43 bool-expr: relation-and-expr OR bool-expr
   44          | relation-and-expr

   45 relation-and-expr: relation-expr AND relation-and-expr
   46                  | relation-expr

   47 relation-expr: expression comp expression
   48              | NOT expression comp expression
   49              | TRUE
   50              | FALSE
   51              | NOT TRUE
   52              | NOT FALSE
   53              | L_PAREN bool-expr R_PAREN
   54              | NOT L_PAREN bool-expr R_PAREN

   55 comp: EQ
   56     | NEQ
   57     | LT
   58     | GT
   59     | LTE
   60     | GTE

   61 expression: multiplicative_expression ADD expression
   62           | multiplicative_expression SUB expression
   63           | multiplicative_expression

   64 expression_chain: expression_chain COMMA expression
   65                 | expression

   66 vars: vars COMMA var
   67     | var

   68 var: IDENT
   69    | IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   70    | IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET


Terminals, with rules where they appear

$end (0) 0
error (256)
AND (258) 45
OR (259) 43
NOT (260) 48 51 52 54
TRUE (261) 49 51
FALSE (262) 50 52
IF (263) 22 23
THEN (264) 22 23
ELSE (265) 23
ENDIF (266) 22 23
WHILE (267) 24 25
DO (268) 25
BEGINLOOP (269) 24 25 26
ENDLOOP (270) 24 25 26
FOR (271) 26
FOREACH (272)
IN (273)
CONTINUE (274) 29
FUNCTION (275) 8
RETURN (276) 30
BEGIN_PARAMS (277) 5
END_PARAMS (278) 5
BEGIN_LOCALS (279) 6
END_LOCALS (280) 6
BEGIN_BODY (281) 7
END_BODY (282) 7
INTEGER (283) 14 15 16
ARRAY (284) 15 16
OF (285) 15 16
READ (286) 27
WRITE (287) 28
ADD (288) 61
SUB (289) 34 35 36 37 62
MULT (290) 39
DIV (291) 40
MOD (292) 41
EQ (293) 55
ASSIGN (294) 21 26
NEQ (295) 56
LT (296) 57
GT (297) 58
LTE (298) 59
GTE (299) 60
L_PAREN (300) 33 36 37 53 54
R_PAREN (301) 33 36 37 53 54
L_SQUARE_BRACKET (302) 15 16 69 70
R_SQUARE_BRACKET (303) 15 16 69 70
SEMICOLON (304) 8 9 11 17 19 26
COLON (305) 14 15 16
COMMA (306) 13 64 66
IDENT (307) 8 13 14 15 16 33 37 68 69 70
NUMBER (308) 15 16 26 32 35


Nonterminals, with rules where they appear

$accept (54)
    on left: 0
program (55)
    on left: 1, on right: 0
functions (56)
    on left: 2 3 4, on right: 1 3
params (57)
    on left: 5, on right: 8
locals (58)
    on left: 6, on right: 8
body (59)
    on left: 7, on right: 8
function (60)
    on left: 8, on right: 3 4
declarations (61)
    on left: 9 10 11 12, on right: 5 6 9 11
declaration (62)
    on left: 13 14 15 16, on right: 11 12 13
statements (63)
    on left: 17 18 19 20, on right: 7 17 19 22 23 24 25 26
statement (64)
    on left: 21 22 23 24 25 26 27 28 29 30, on right: 19 20
term (65)
    on left: 31 32 33 34 35 36 37, on right: 39 40 41 42
multiplicative_expression_0 (66)
    on left: 38, on right: 39 40 41
multiplicative_expression (67)
    on left: 39 40 41 42, on right: 38 61 62 63
bool-expr (68)
    on left: 43 44, on right: 22 23 24 25 26 43 53 54
relation-and-expr (69)
    on left: 45 46, on right: 43 44 45
relation-expr (70)
    on left: 47 48 49 50 51 52 53 54, on right: 45 46
comp (71)
    on left: 55 56 57 58 59 60, on right: 47 48
expression (72)
    on left: 61 62 63, on right: 21 26 30 36 47 48 61 62 64 65 69 70
expression_chain (73)
    on left: 64 65, on right: 33 37 64
vars (74)
    on left: 66 67, on right: 27 28 66
var (75)
    on left: 68 69 70, on right: 21 26 31 34 66 67


State 0

    0 $accept: . program $end

    FUNCTION  shift, and go to state 1

    FUNCTION  [reduce using rule 2 (functions)]
    $default  reduce using rule 2 (functions)

    program    go to state 2
    functions  go to state 3
    function   go to state 4


State 1

    8 function: FUNCTION . IDENT SEMICOLON params locals body

    IDENT  shift, and go to state 5


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    1 program: functions .
    3 functions: functions . function

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 1 (program)

    function  go to state 7


State 4

    4 functions: function .

    $default  reduce using rule 4 (functions)


State 5

    8 function: FUNCTION IDENT . SEMICOLON params locals body

    SEMICOLON  shift, and go to state 8


State 6

    0 $accept: program $end .

    $default  accept


State 7

    3 functions: functions function .

    $default  reduce using rule 3 (functions)


State 8

    8 function: FUNCTION IDENT SEMICOLON . params locals body

    BEGIN_PARAMS  shift, and go to state 9

    params  go to state 10


State 9

    5 params: BEGIN_PARAMS . declarations END_PARAMS

    IDENT  shift, and go to state 11

    $default  reduce using rule 10 (declarations)

    declarations  go to state 12
    declaration   go to state 13


State 10

    8 function: FUNCTION IDENT SEMICOLON params . locals body

    BEGIN_LOCALS  shift, and go to state 14

    locals  go to state 15


State 11

   13 declaration: IDENT . COMMA declaration
   14            | IDENT . COLON INTEGER
   15            | IDENT . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   16            | IDENT . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    COLON  shift, and go to state 16
    COMMA  shift, and go to state 17


State 12

    5 params: BEGIN_PARAMS declarations . END_PARAMS
    9 declarations: declarations . SEMICOLON
   11             | declarations . SEMICOLON declaration

    END_PARAMS  shift, and go to state 18
    SEMICOLON   shift, and go to state 19


State 13

   12 declarations: declaration .

    $default  reduce using rule 12 (declarations)


State 14

    6 locals: BEGIN_LOCALS . declarations END_LOCALS

    IDENT  shift, and go to state 11

    $default  reduce using rule 10 (declarations)

    declarations  go to state 20
    declaration   go to state 13


State 15

    8 function: FUNCTION IDENT SEMICOLON params locals . body

    BEGIN_BODY  shift, and go to state 21

    body  go to state 22


State 16

   14 declaration: IDENT COLON . INTEGER
   15            | IDENT COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   16            | IDENT COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    INTEGER  shift, and go to state 23
    ARRAY    shift, and go to state 24


State 17

   13 declaration: IDENT COMMA . declaration

    IDENT  shift, and go to state 11

    declaration  go to state 25


State 18

    5 params: BEGIN_PARAMS declarations END_PARAMS .

    $default  reduce using rule 5 (params)


State 19

    9 declarations: declarations SEMICOLON .
   11             | declarations SEMICOLON . declaration

    IDENT  shift, and go to state 11

    $default  reduce using rule 9 (declarations)

    declaration  go to state 26


State 20

    6 locals: BEGIN_LOCALS declarations . END_LOCALS
    9 declarations: declarations . SEMICOLON
   11             | declarations . SEMICOLON declaration

    END_LOCALS  shift, and go to state 27
    SEMICOLON   shift, and go to state 19


State 21

    7 body: BEGIN_BODY . statements END_BODY

    IF        shift, and go to state 28
    WHILE     shift, and go to state 29
    DO        shift, and go to state 30
    FOR       shift, and go to state 31
    CONTINUE  shift, and go to state 32
    RETURN    shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    IDENT     shift, and go to state 36

    $default  reduce using rule 18 (statements)

    statements  go to state 37
    statement   go to state 38
    var         go to state 39


State 22

    8 function: FUNCTION IDENT SEMICOLON params locals body .

    $default  reduce using rule 8 (function)


State 23

   14 declaration: IDENT COLON INTEGER .

    $default  reduce using rule 14 (declaration)


State 24

   15 declaration: IDENT COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   16            | IDENT COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 40


State 25

   13 declaration: IDENT COMMA declaration .

    $default  reduce using rule 13 (declaration)


State 26

   11 declarations: declarations SEMICOLON declaration .

    $default  reduce using rule 11 (declarations)


State 27

    6 locals: BEGIN_LOCALS declarations END_LOCALS .

    $default  reduce using rule 6 (locals)


State 28

   22 statement: IF . bool-expr THEN statements ENDIF
   23          | IF . bool-expr THEN statements ELSE statements ENDIF

    NOT      shift, and go to state 41
    TRUE     shift, and go to state 42
    FALSE    shift, and go to state 43
    SUB      shift, and go to state 44
    L_PAREN  shift, and go to state 45
    IDENT    shift, and go to state 46
    NUMBER   shift, and go to state 47

    term                       go to state 48
    multiplicative_expression  go to state 49
    bool-expr                  go to state 50
    relation-and-expr          go to state 51
    relation-expr              go to state 52
    expression                 go to state 53
    var                        go to state 54


State 29

   24 statement: WHILE . bool-expr BEGINLOOP statements ENDLOOP

    NOT      shift, and go to state 41
    TRUE     shift, and go to state 42
    FALSE    shift, and go to state 43
    SUB      shift, and go to state 44
    L_PAREN  shift, and go to state 45
    IDENT    shift, and go to state 46
    NUMBER   shift, and go to state 47

    term                       go to state 48
    multiplicative_expression  go to state 49
    bool-expr                  go to state 55
    relation-and-expr          go to state 51
    relation-expr              go to state 52
    expression                 go to state 53
    var                        go to state 54


State 30

   25 statement: DO . BEGINLOOP statements ENDLOOP WHILE bool-expr

    BEGINLOOP  shift, and go to state 56


State 31

   26 statement: FOR . var ASSIGN NUMBER SEMICOLON bool-expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    IDENT  shift, and go to state 36

    var  go to state 57


State 32

   29 statement: CONTINUE .

    $default  reduce using rule 29 (statement)


State 33

   30 statement: RETURN . expression

    SUB     shift, and go to state 44
    IDENT   shift, and go to state 46
    NUMBER  shift, and go to state 47

    term                       go to state 48
    multiplicative_expression  go to state 49
    expression                 go to state 58
    var                        go to state 54


State 34

   27 statement: READ . vars

    IDENT  shift, and go to state 36

    vars  go to state 59
    var   go to state 60


State 35

   28 statement: WRITE . vars

    IDENT  shift, and go to state 36

    vars  go to state 61
    var   go to state 60


State 36

   68 var: IDENT .
   69    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   70    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 62

    $default  reduce using rule 68 (var)


State 37

    7 body: BEGIN_BODY statements . END_BODY
   17 statements: statements . SEMICOLON
   19           | statements . SEMICOLON statement

    END_BODY   shift, and go to state 63
    SEMICOLON  shift, and go to state 64


State 38

   20 statements: statement .

    $default  reduce using rule 20 (statements)


State 39

   21 statement: var . ASSIGN expression

    ASSIGN  shift, and go to state 65


State 40

   15 declaration: IDENT COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER
   16            | IDENT COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 66


State 41

   48 relation-expr: NOT . expression comp expression
   51              | NOT . TRUE
   52              | NOT . FALSE
   54              | NOT . L_PAREN bool-expr R_PAREN

    TRUE     shift, and go to state 67
    FALSE    shift, and go to state 68
    SUB      shift, and go to state 44
    L_PAREN  shift, and go to state 69
    IDENT    shift, and go to state 46
    NUMBER   shift, and go to state 47

    term                       go to state 48
    multiplicative_expression  go to state 49
    expression                 go to state 70
    var                        go to state 54


State 42

   49 relation-expr: TRUE .

    $default  reduce using rule 49 (relation-expr)


State 43

   50 relation-expr: FALSE .

    $default  reduce using rule 50 (relation-expr)


State 44

   34 term: SUB . var
   35     | SUB . NUMBER
   36     | SUB . L_PAREN expression R_PAREN
   37     | SUB . IDENT L_PAREN expression_chain R_PAREN

    L_PAREN  shift, and go to state 71
    IDENT    shift, and go to state 72
    NUMBER   shift, and go to state 73

    var  go to state 74


State 45

   53 relation-expr: L_PAREN . bool-expr R_PAREN

    NOT      shift, and go to state 41
    TRUE     shift, and go to state 42
    FALSE    shift, and go to state 43
    SUB      shift, and go to state 44
    L_PAREN  shift, and go to state 45
    IDENT    shift, and go to state 46
    NUMBER   shift, and go to state 47

    term                       go to state 48
    multiplicative_expression  go to state 49
    bool-expr                  go to state 75
    relation-and-expr          go to state 51
    relation-expr              go to state 52
    expression                 go to state 53
    var                        go to state 54


State 46

   33 term: IDENT . L_PAREN expression_chain R_PAREN
   68 var: IDENT .
   69    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   70    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_PAREN           shift, and go to state 76
    L_SQUARE_BRACKET  shift, and go to state 62

    $default  reduce using rule 68 (var)


State 47

   32 term: NUMBER .

    $default  reduce using rule 32 (term)


State 48

   39 multiplicative_expression: term . MULT multiplicative_expression_0
   40                          | term . DIV multiplicative_expression_0
   41                          | term . MOD multiplicative_expression_0
   42                          | term .

    MULT  shift, and go to state 77
    DIV   shift, and go to state 78
    MOD   shift, and go to state 79

    $default  reduce using rule 42 (multiplicative_expression)


State 49

   61 expression: multiplicative_expression . ADD expression
   62           | multiplicative_expression . SUB expression
   63           | multiplicative_expression .

    ADD  shift, and go to state 80
    SUB  shift, and go to state 81

    $default  reduce using rule 63 (expression)


State 50

   22 statement: IF bool-expr . THEN statements ENDIF
   23          | IF bool-expr . THEN statements ELSE statements ENDIF

    THEN  shift, and go to state 82


State 51

   43 bool-expr: relation-and-expr . OR bool-expr
   44          | relation-and-expr .

    OR  shift, and go to state 83

    $default  reduce using rule 44 (bool-expr)


State 52

   45 relation-and-expr: relation-expr . AND relation-and-expr
   46                  | relation-expr .

    AND  shift, and go to state 84

    $default  reduce using rule 46 (relation-and-expr)


State 53

   47 relation-expr: expression . comp expression

    EQ   shift, and go to state 85
    NEQ  shift, and go to state 86
    LT   shift, and go to state 87
    GT   shift, and go to state 88
    LTE  shift, and go to state 89
    GTE  shift, and go to state 90

    comp  go to state 91


State 54

   31 term: var .

    $default  reduce using rule 31 (term)


State 55

   24 statement: WHILE bool-expr . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 92


State 56

   25 statement: DO BEGINLOOP . statements ENDLOOP WHILE bool-expr

    IF        shift, and go to state 28
    WHILE     shift, and go to state 29
    DO        shift, and go to state 30
    FOR       shift, and go to state 31
    CONTINUE  shift, and go to state 32
    RETURN    shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    IDENT     shift, and go to state 36

    $default  reduce using rule 18 (statements)

    statements  go to state 93
    statement   go to state 38
    var         go to state 39


State 57

   26 statement: FOR var . ASSIGN NUMBER SEMICOLON bool-expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    ASSIGN  shift, and go to state 94


State 58

   30 statement: RETURN expression .

    $default  reduce using rule 30 (statement)


State 59

   27 statement: READ vars .
   66 vars: vars . COMMA var

    COMMA  shift, and go to state 95

    $default  reduce using rule 27 (statement)


State 60

   67 vars: var .

    $default  reduce using rule 67 (vars)


State 61

   28 statement: WRITE vars .
   66 vars: vars . COMMA var

    COMMA  shift, and go to state 95

    $default  reduce using rule 28 (statement)


State 62

   69 var: IDENT L_SQUARE_BRACKET . expression R_SQUARE_BRACKET
   70    | IDENT L_SQUARE_BRACKET . expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    SUB     shift, and go to state 44
    IDENT   shift, and go to state 46
    NUMBER  shift, and go to state 47

    term                       go to state 48
    multiplicative_expression  go to state 49
    expression                 go to state 96
    var                        go to state 54


State 63

    7 body: BEGIN_BODY statements END_BODY .

    $default  reduce using rule 7 (body)


State 64

   17 statements: statements SEMICOLON .
   19           | statements SEMICOLON . statement

    IF        shift, and go to state 28
    WHILE     shift, and go to state 29
    DO        shift, and go to state 30
    FOR       shift, and go to state 31
    CONTINUE  shift, and go to state 32
    RETURN    shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    IDENT     shift, and go to state 36

    $default  reduce using rule 17 (statements)

    statement  go to state 97
    var        go to state 39


State 65

   21 statement: var ASSIGN . expression

    SUB     shift, and go to state 44
    IDENT   shift, and go to state 46
    NUMBER  shift, and go to state 47

    term                       go to state 48
    multiplicative_expression  go to state 49
    expression                 go to state 98
    var                        go to state 54


State 66

   15 declaration: IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER
   16            | IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 99


State 67

   51 relation-expr: NOT TRUE .

    $default  reduce using rule 51 (relation-expr)


State 68

   52 relation-expr: NOT FALSE .

    $default  reduce using rule 52 (relation-expr)


State 69

   54 relation-expr: NOT L_PAREN . bool-expr R_PAREN

    NOT      shift, and go to state 41
    TRUE     shift, and go to state 42
    FALSE    shift, and go to state 43
    SUB      shift, and go to state 44
    L_PAREN  shift, and go to state 45
    IDENT    shift, and go to state 46
    NUMBER   shift, and go to state 47

    term                       go to state 48
    multiplicative_expression  go to state 49
    bool-expr                  go to state 100
    relation-and-expr          go to state 51
    relation-expr              go to state 52
    expression                 go to state 53
    var                        go to state 54


State 70

   48 relation-expr: NOT expression . comp expression

    EQ   shift, and go to state 85
    NEQ  shift, and go to state 86
    LT   shift, and go to state 87
    GT   shift, and go to state 88
    LTE  shift, and go to state 89
    GTE  shift, and go to state 90

    comp  go to state 101


State 71

   36 term: SUB L_PAREN . expression R_PAREN

    SUB     shift, and go to state 44
    IDENT   shift, and go to state 46
    NUMBER  shift, and go to state 47

    term                       go to state 48
    multiplicative_expression  go to state 49
    expression                 go to state 102
    var                        go to state 54


State 72

   37 term: SUB IDENT . L_PAREN expression_chain R_PAREN
   68 var: IDENT .
   69    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   70    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_PAREN           shift, and go to state 103
    L_SQUARE_BRACKET  shift, and go to state 62

    $default  reduce using rule 68 (var)


State 73

   35 term: SUB NUMBER .

    $default  reduce using rule 35 (term)


State 74

   34 term: SUB var .

    $default  reduce using rule 34 (term)


State 75

   53 relation-expr: L_PAREN bool-expr . R_PAREN

    R_PAREN  shift, and go to state 104


State 76

   33 term: IDENT L_PAREN . expression_chain R_PAREN

    SUB     shift, and go to state 44
    IDENT   shift, and go to state 46
    NUMBER  shift, and go to state 47

    term                       go to state 48
    multiplicative_expression  go to state 49
    expression                 go to state 105
    expression_chain           go to state 106
    var                        go to state 54


State 77

   39 multiplicative_expression: term MULT . multiplicative_expression_0

    SUB     shift, and go to state 44
    IDENT   shift, and go to state 46
    NUMBER  shift, and go to state 47

    term                         go to state 48
    multiplicative_expression_0  go to state 107
    multiplicative_expression    go to state 108
    var                          go to state 54


State 78

   40 multiplicative_expression: term DIV . multiplicative_expression_0

    SUB     shift, and go to state 44
    IDENT   shift, and go to state 46
    NUMBER  shift, and go to state 47

    term                         go to state 48
    multiplicative_expression_0  go to state 109
    multiplicative_expression    go to state 108
    var                          go to state 54


State 79

   41 multiplicative_expression: term MOD . multiplicative_expression_0

    SUB     shift, and go to state 44
    IDENT   shift, and go to state 46
    NUMBER  shift, and go to state 47

    term                         go to state 48
    multiplicative_expression_0  go to state 110
    multiplicative_expression    go to state 108
    var                          go to state 54


State 80

   61 expression: multiplicative_expression ADD . expression

    SUB     shift, and go to state 44
    IDENT   shift, and go to state 46
    NUMBER  shift, and go to state 47

    term                       go to state 48
    multiplicative_expression  go to state 49
    expression                 go to state 111
    var                        go to state 54


State 81

   62 expression: multiplicative_expression SUB . expression

    SUB     shift, and go to state 44
    IDENT   shift, and go to state 46
    NUMBER  shift, and go to state 47

    term                       go to state 48
    multiplicative_expression  go to state 49
    expression                 go to state 112
    var                        go to state 54


State 82

   22 statement: IF bool-expr THEN . statements ENDIF
   23          | IF bool-expr THEN . statements ELSE statements ENDIF

    IF        shift, and go to state 28
    WHILE     shift, and go to state 29
    DO        shift, and go to state 30
    FOR       shift, and go to state 31
    CONTINUE  shift, and go to state 32
    RETURN    shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    IDENT     shift, and go to state 36

    $default  reduce using rule 18 (statements)

    statements  go to state 113
    statement   go to state 38
    var         go to state 39


State 83

   43 bool-expr: relation-and-expr OR . bool-expr

    NOT      shift, and go to state 41
    TRUE     shift, and go to state 42
    FALSE    shift, and go to state 43
    SUB      shift, and go to state 44
    L_PAREN  shift, and go to state 45
    IDENT    shift, and go to state 46
    NUMBER   shift, and go to state 47

    term                       go to state 48
    multiplicative_expression  go to state 49
    bool-expr                  go to state 114
    relation-and-expr          go to state 51
    relation-expr              go to state 52
    expression                 go to state 53
    var                        go to state 54


State 84

   45 relation-and-expr: relation-expr AND . relation-and-expr

    NOT      shift, and go to state 41
    TRUE     shift, and go to state 42
    FALSE    shift, and go to state 43
    SUB      shift, and go to state 44
    L_PAREN  shift, and go to state 45
    IDENT    shift, and go to state 46
    NUMBER   shift, and go to state 47

    term                       go to state 48
    multiplicative_expression  go to state 49
    relation-and-expr          go to state 115
    relation-expr              go to state 52
    expression                 go to state 53
    var                        go to state 54


State 85

   55 comp: EQ .

    $default  reduce using rule 55 (comp)


State 86

   56 comp: NEQ .

    $default  reduce using rule 56 (comp)


State 87

   57 comp: LT .

    $default  reduce using rule 57 (comp)


State 88

   58 comp: GT .

    $default  reduce using rule 58 (comp)


State 89

   59 comp: LTE .

    $default  reduce using rule 59 (comp)


State 90

   60 comp: GTE .

    $default  reduce using rule 60 (comp)


State 91

   47 relation-expr: expression comp . expression

    SUB     shift, and go to state 44
    IDENT   shift, and go to state 46
    NUMBER  shift, and go to state 47

    term                       go to state 48
    multiplicative_expression  go to state 49
    expression                 go to state 116
    var                        go to state 54


State 92

   24 statement: WHILE bool-expr BEGINLOOP . statements ENDLOOP

    IF        shift, and go to state 28
    WHILE     shift, and go to state 29
    DO        shift, and go to state 30
    FOR       shift, and go to state 31
    CONTINUE  shift, and go to state 32
    RETURN    shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    IDENT     shift, and go to state 36

    $default  reduce using rule 18 (statements)

    statements  go to state 117
    statement   go to state 38
    var         go to state 39


State 93

   17 statements: statements . SEMICOLON
   19           | statements . SEMICOLON statement
   25 statement: DO BEGINLOOP statements . ENDLOOP WHILE bool-expr

    ENDLOOP    shift, and go to state 118
    SEMICOLON  shift, and go to state 64


State 94

   26 statement: FOR var ASSIGN . NUMBER SEMICOLON bool-expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    NUMBER  shift, and go to state 119


State 95

   66 vars: vars COMMA . var

    IDENT  shift, and go to state 36

    var  go to state 120


State 96

   69 var: IDENT L_SQUARE_BRACKET expression . R_SQUARE_BRACKET
   70    | IDENT L_SQUARE_BRACKET expression . R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 121


State 97

   19 statements: statements SEMICOLON statement .

    $default  reduce using rule 19 (statements)


State 98

   21 statement: var ASSIGN expression .

    $default  reduce using rule 21 (statement)


State 99

   15 declaration: IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER
   16            | IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    OF                shift, and go to state 122
    L_SQUARE_BRACKET  shift, and go to state 123


State 100

   54 relation-expr: NOT L_PAREN bool-expr . R_PAREN

    R_PAREN  shift, and go to state 124


State 101

   48 relation-expr: NOT expression comp . expression

    SUB     shift, and go to state 44
    IDENT   shift, and go to state 46
    NUMBER  shift, and go to state 47

    term                       go to state 48
    multiplicative_expression  go to state 49
    expression                 go to state 125
    var                        go to state 54


State 102

   36 term: SUB L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 126


State 103

   37 term: SUB IDENT L_PAREN . expression_chain R_PAREN

    SUB     shift, and go to state 44
    IDENT   shift, and go to state 46
    NUMBER  shift, and go to state 47

    term                       go to state 48
    multiplicative_expression  go to state 49
    expression                 go to state 105
    expression_chain           go to state 127
    var                        go to state 54


State 104

   53 relation-expr: L_PAREN bool-expr R_PAREN .

    $default  reduce using rule 53 (relation-expr)


State 105

   65 expression_chain: expression .

    $default  reduce using rule 65 (expression_chain)


State 106

   33 term: IDENT L_PAREN expression_chain . R_PAREN
   64 expression_chain: expression_chain . COMMA expression

    R_PAREN  shift, and go to state 128
    COMMA    shift, and go to state 129


State 107

   39 multiplicative_expression: term MULT multiplicative_expression_0 .

    $default  reduce using rule 39 (multiplicative_expression)


State 108

   38 multiplicative_expression_0: multiplicative_expression .

    $default  reduce using rule 38 (multiplicative_expression_0)


State 109

   40 multiplicative_expression: term DIV multiplicative_expression_0 .

    $default  reduce using rule 40 (multiplicative_expression)


State 110

   41 multiplicative_expression: term MOD multiplicative_expression_0 .

    $default  reduce using rule 41 (multiplicative_expression)


State 111

   61 expression: multiplicative_expression ADD expression .

    $default  reduce using rule 61 (expression)


State 112

   62 expression: multiplicative_expression SUB expression .

    $default  reduce using rule 62 (expression)


State 113

   17 statements: statements . SEMICOLON
   19           | statements . SEMICOLON statement
   22 statement: IF bool-expr THEN statements . ENDIF
   23          | IF bool-expr THEN statements . ELSE statements ENDIF

    ELSE       shift, and go to state 130
    ENDIF      shift, and go to state 131
    SEMICOLON  shift, and go to state 64


State 114

   43 bool-expr: relation-and-expr OR bool-expr .

    $default  reduce using rule 43 (bool-expr)


State 115

   45 relation-and-expr: relation-expr AND relation-and-expr .

    $default  reduce using rule 45 (relation-and-expr)


State 116

   47 relation-expr: expression comp expression .

    $default  reduce using rule 47 (relation-expr)


State 117

   17 statements: statements . SEMICOLON
   19           | statements . SEMICOLON statement
   24 statement: WHILE bool-expr BEGINLOOP statements . ENDLOOP

    ENDLOOP    shift, and go to state 132
    SEMICOLON  shift, and go to state 64


State 118

   25 statement: DO BEGINLOOP statements ENDLOOP . WHILE bool-expr

    WHILE  shift, and go to state 133


State 119

   26 statement: FOR var ASSIGN NUMBER . SEMICOLON bool-expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    SEMICOLON  shift, and go to state 134


State 120

   66 vars: vars COMMA var .

    $default  reduce using rule 66 (vars)


State 121

   69 var: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET .
   70    | IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 135

    $default  reduce using rule 69 (var)


State 122

   15 declaration: IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 136


State 123

   16 declaration: IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 137


State 124

   54 relation-expr: NOT L_PAREN bool-expr R_PAREN .

    $default  reduce using rule 54 (relation-expr)


State 125

   48 relation-expr: NOT expression comp expression .

    $default  reduce using rule 48 (relation-expr)


State 126

   36 term: SUB L_PAREN expression R_PAREN .

    $default  reduce using rule 36 (term)


State 127

   37 term: SUB IDENT L_PAREN expression_chain . R_PAREN
   64 expression_chain: expression_chain . COMMA expression

    R_PAREN  shift, and go to state 138
    COMMA    shift, and go to state 129


State 128

   33 term: IDENT L_PAREN expression_chain R_PAREN .

    $default  reduce using rule 33 (term)


State 129

   64 expression_chain: expression_chain COMMA . expression

    SUB     shift, and go to state 44
    IDENT   shift, and go to state 46
    NUMBER  shift, and go to state 47

    term                       go to state 48
    multiplicative_expression  go to state 49
    expression                 go to state 139
    var                        go to state 54


State 130

   23 statement: IF bool-expr THEN statements ELSE . statements ENDIF

    IF        shift, and go to state 28
    WHILE     shift, and go to state 29
    DO        shift, and go to state 30
    FOR       shift, and go to state 31
    CONTINUE  shift, and go to state 32
    RETURN    shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    IDENT     shift, and go to state 36

    $default  reduce using rule 18 (statements)

    statements  go to state 140
    statement   go to state 38
    var         go to state 39


State 131

   22 statement: IF bool-expr THEN statements ENDIF .

    $default  reduce using rule 22 (statement)


State 132

   24 statement: WHILE bool-expr BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 24 (statement)


State 133

   25 statement: DO BEGINLOOP statements ENDLOOP WHILE . bool-expr

    NOT      shift, and go to state 41
    TRUE     shift, and go to state 42
    FALSE    shift, and go to state 43
    SUB      shift, and go to state 44
    L_PAREN  shift, and go to state 45
    IDENT    shift, and go to state 46
    NUMBER   shift, and go to state 47

    term                       go to state 48
    multiplicative_expression  go to state 49
    bool-expr                  go to state 141
    relation-and-expr          go to state 51
    relation-expr              go to state 52
    expression                 go to state 53
    var                        go to state 54


State 134

   26 statement: FOR var ASSIGN NUMBER SEMICOLON . bool-expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    NOT      shift, and go to state 41
    TRUE     shift, and go to state 42
    FALSE    shift, and go to state 43
    SUB      shift, and go to state 44
    L_PAREN  shift, and go to state 45
    IDENT    shift, and go to state 46
    NUMBER   shift, and go to state 47

    term                       go to state 48
    multiplicative_expression  go to state 49
    bool-expr                  go to state 142
    relation-and-expr          go to state 51
    relation-expr              go to state 52
    expression                 go to state 53
    var                        go to state 54


State 135

   70 var: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    SUB     shift, and go to state 44
    IDENT   shift, and go to state 46
    NUMBER  shift, and go to state 47

    term                       go to state 48
    multiplicative_expression  go to state 49
    expression                 go to state 143
    var                        go to state 54


State 136

   15 declaration: IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 15 (declaration)


State 137

   16 declaration: IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 144


State 138

   37 term: SUB IDENT L_PAREN expression_chain R_PAREN .

    $default  reduce using rule 37 (term)


State 139

   64 expression_chain: expression_chain COMMA expression .

    $default  reduce using rule 64 (expression_chain)


State 140

   17 statements: statements . SEMICOLON
   19           | statements . SEMICOLON statement
   23 statement: IF bool-expr THEN statements ELSE statements . ENDIF

    ENDIF      shift, and go to state 145
    SEMICOLON  shift, and go to state 64


State 141

   25 statement: DO BEGINLOOP statements ENDLOOP WHILE bool-expr .

    $default  reduce using rule 25 (statement)


State 142

   26 statement: FOR var ASSIGN NUMBER SEMICOLON bool-expr . SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    SEMICOLON  shift, and go to state 146


State 143

   70 var: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 147


State 144

   16 declaration: IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 148


State 145

   23 statement: IF bool-expr THEN statements ELSE statements ENDIF .

    $default  reduce using rule 23 (statement)


State 146

   26 statement: FOR var ASSIGN NUMBER SEMICOLON bool-expr SEMICOLON . var ASSIGN expression BEGINLOOP statements ENDLOOP

    IDENT  shift, and go to state 36

    var  go to state 149


State 147

   70 var: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 70 (var)


State 148

   16 declaration: IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 150


State 149

   26 statement: FOR var ASSIGN NUMBER SEMICOLON bool-expr SEMICOLON var . ASSIGN expression BEGINLOOP statements ENDLOOP

    ASSIGN  shift, and go to state 151


State 150

   16 declaration: IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 16 (declaration)


State 151

   26 statement: FOR var ASSIGN NUMBER SEMICOLON bool-expr SEMICOLON var ASSIGN . expression BEGINLOOP statements ENDLOOP

    SUB     shift, and go to state 44
    IDENT   shift, and go to state 46
    NUMBER  shift, and go to state 47

    term                       go to state 48
    multiplicative_expression  go to state 49
    expression                 go to state 152
    var                        go to state 54


State 152

   26 statement: FOR var ASSIGN NUMBER SEMICOLON bool-expr SEMICOLON var ASSIGN expression . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 153


State 153

   26 statement: FOR var ASSIGN NUMBER SEMICOLON bool-expr SEMICOLON var ASSIGN expression BEGINLOOP . statements ENDLOOP

    IF        shift, and go to state 28
    WHILE     shift, and go to state 29
    DO        shift, and go to state 30
    FOR       shift, and go to state 31
    CONTINUE  shift, and go to state 32
    RETURN    shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    IDENT     shift, and go to state 36

    $default  reduce using rule 18 (statements)

    statements  go to state 154
    statement   go to state 38
    var         go to state 39


State 154

   17 statements: statements . SEMICOLON
   19           | statements . SEMICOLON statement
   26 statement: FOR var ASSIGN NUMBER SEMICOLON bool-expr SEMICOLON var ASSIGN expression BEGINLOOP statements . ENDLOOP

    ENDLOOP    shift, and go to state 155
    SEMICOLON  shift, and go to state 64


State 155

   26 statement: FOR var ASSIGN NUMBER SEMICOLON bool-expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 26 (statement)
