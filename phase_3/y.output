Terminals unused in grammar

    FOREACH
    IN


State 0 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: functions

    2 functions: %empty
    3          | functions function
    4          | function

    5 begin_params: BEGIN_PARAMS

    6 end_params: END_PARAMS

    7 params: begin_params declarations end_params

    8 locals: BEGIN_LOCALS declarations END_LOCALS

    9 body: BEGIN_BODY statements END_BODY

   10 function: FUNCTION IDENT SEMICOLON params locals body

   11 declarations: declarations SEMICOLON
   12             | %empty
   13             | declarations SEMICOLON declaration
   14             | declaration

   15 declaration: IDENT COMMA declaration
   16            | IDENT COLON INTEGER
   17            | IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   18            | IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

   19 statements: statements SEMICOLON
   20           | %empty
   21           | statements SEMICOLON statement
   22           | statement

   23 statement: var ASSIGN expression
   24          | IF bool-expr THEN statements ENDIF
   25          | IF bool-expr THEN statements ELSE statements ENDIF
   26          | WHILE bool-expr BEGINLOOP statements ENDLOOP
   27          | DO BEGINLOOP statements ENDLOOP WHILE bool-expr
   28          | FOR var ASSIGN NUMBER SEMICOLON bool-expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP
   29          | READ vars
   30          | WRITE vars
   31          | CONTINUE
   32          | RETURN expression

   33 term: var
   34     | NUMBER
   35     | IDENT L_PAREN expression_chain R_PAREN
   36     | SUB var
   37     | SUB NUMBER
   38     | SUB L_PAREN expression R_PAREN
   39     | SUB IDENT L_PAREN expression_chain R_PAREN

   40 multiplicative_expression_0: multiplicative_expression

   41 multiplicative_expression: term MULT multiplicative_expression_0
   42                          | term DIV multiplicative_expression_0
   43                          | term MOD multiplicative_expression_0
   44                          | term

   45 bool-expr: relation-and-expr OR bool-expr
   46          | relation-and-expr

   47 relation-and-expr: relation-expr AND relation-and-expr
   48                  | relation-expr

   49 relation-expr: expression comp expression
   50              | NOT expression comp expression
   51              | TRUE
   52              | FALSE
   53              | NOT TRUE
   54              | NOT FALSE
   55              | L_PAREN bool-expr R_PAREN
   56              | NOT L_PAREN bool-expr R_PAREN

   57 comp: EQ
   58     | NEQ
   59     | LT
   60     | GT
   61     | LTE
   62     | GTE

   63 expression: multiplicative_expression ADD expression
   64           | multiplicative_expression SUB expression
   65           | multiplicative_expression

   66 expression_chain: expression_chain COMMA expression
   67                 | expression

   68 vars: vars COMMA var
   69     | var

   70 var: IDENT
   71    | IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   72    | IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    AND (258) 47
    OR (259) 45
    NOT (260) 50 53 54 56
    TRUE (261) 51 53
    FALSE (262) 52 54
    IF (263) 24 25
    THEN (264) 24 25
    ELSE (265) 25
    ENDIF (266) 24 25
    WHILE (267) 26 27
    DO (268) 27
    BEGINLOOP (269) 26 27 28
    ENDLOOP (270) 26 27 28
    FOR (271) 28
    FOREACH (272)
    IN (273)
    CONTINUE (274) 31
    FUNCTION (275) 10
    RETURN (276) 32
    BEGIN_PARAMS (277) 5
    END_PARAMS (278) 6
    BEGIN_LOCALS (279) 8
    END_LOCALS (280) 8
    BEGIN_BODY (281) 9
    END_BODY (282) 9
    INTEGER <ival> (283) 16 17 18
    ARRAY (284) 17 18
    OF (285) 17 18
    READ (286) 29
    WRITE (287) 30
    ADD (288) 63
    SUB (289) 36 37 38 39 64
    MULT (290) 41
    DIV (291) 42
    MOD (292) 43
    EQ (293) 57
    ASSIGN (294) 23 28
    NEQ (295) 58
    LT (296) 59
    GT (297) 60
    LTE (298) 61
    GTE (299) 62
    L_PAREN (300) 35 38 39 55 56
    R_PAREN (301) 35 38 39 55 56
    L_SQUARE_BRACKET (302) 17 18 71 72
    R_SQUARE_BRACKET (303) 17 18 71 72
    SEMICOLON (304) 10 11 13 19 21 28
    COLON (305) 16 17 18
    COMMA (306) 15 66 68
    IDENT <sval> (307) 10 15 16 17 18 35 39 70 71 72
    NUMBER <ival> (308) 17 18 28 34 37


Nonterminals, with rules where they appear

    $accept (54)
        on left: 0
    program <generic> (55)
        on left: 1
        on right: 0
    functions <generic> (56)
        on left: 2 3 4
        on right: 1 3
    begin_params (57)
        on left: 5
        on right: 7
    end_params (58)
        on left: 6
        on right: 7
    params <generic> (59)
        on left: 7
        on right: 10
    locals <generic> (60)
        on left: 8
        on right: 10
    body <generic> (61)
        on left: 9
        on right: 10
    function <generic> (62)
        on left: 10
        on right: 3 4
    declarations <expressionContainer> (63)
        on left: 11 12 13 14
        on right: 7 8 11 13
    declaration <expressionContainer> (64)
        on left: 15 16 17 18
        on right: 13 14 15
    statements <statementContainer> (65)
        on left: 19 20 21 22
        on right: 9 19 21 24 25 26 27 28
    statement <statementContainer> (66)
        on left: 23 24 25 26 27 28 29 30 31 32
        on right: 21 22
    term <expressionContainer> (67)
        on left: 33 34 35 36 37 38 39
        on right: 41 42 43 44
    multiplicative_expression_0 <expressionContainer> (68)
        on left: 40
        on right: 41 42 43
    multiplicative_expression <expressionContainer> (69)
        on left: 41 42 43 44
        on right: 40 63 64 65
    bool-expr <expressionContainer> (70)
        on left: 45 46
        on right: 24 25 26 27 28 45 55 56
    relation-and-expr <expressionContainer> (71)
        on left: 47 48
        on right: 45 46 47
    relation-expr <expressionContainer> (72)
        on left: 49 50 51 52 53 54 55 56
        on right: 47 48
    comp <comparator> (73)
        on left: 57 58 59 60 61 62
        on right: 49 50
    expression <expressionContainer> (74)
        on left: 63 64 65
        on right: 23 28 32 38 49 50 63 64 66 67 71 72
    expression_chain <expressionContainer> (75)
        on left: 66 67
        on right: 35 39 66
    vars <expressionContainer> (76)
        on left: 68 69
        on right: 29 30 68
    var <expressionContainer> (77)
        on left: 70 71 72
        on right: 23 28 33 36 68 69


State 0

    0 $accept: . program $end

    FUNCTION  shift, and go to state 1

    FUNCTION  [reduce using rule 2 (functions)]
    $default  reduce using rule 2 (functions)

    program    go to state 2
    functions  go to state 3
    function   go to state 4


State 1

   10 function: FUNCTION . IDENT SEMICOLON params locals body

    IDENT  shift, and go to state 5


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    1 program: functions .
    3 functions: functions . function

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 1 (program)

    function  go to state 7


State 4

    4 functions: function .

    $default  reduce using rule 4 (functions)


State 5

   10 function: FUNCTION IDENT . SEMICOLON params locals body

    SEMICOLON  shift, and go to state 8


State 6

    0 $accept: program $end .

    $default  accept


State 7

    3 functions: functions function .

    $default  reduce using rule 3 (functions)


State 8

   10 function: FUNCTION IDENT SEMICOLON . params locals body

    BEGIN_PARAMS  shift, and go to state 9

    begin_params  go to state 10
    params        go to state 11


State 9

    5 begin_params: BEGIN_PARAMS .

    $default  reduce using rule 5 (begin_params)


State 10

    7 params: begin_params . declarations end_params

    IDENT  shift, and go to state 12

    $default  reduce using rule 12 (declarations)

    declarations  go to state 13
    declaration   go to state 14


State 11

   10 function: FUNCTION IDENT SEMICOLON params . locals body

    BEGIN_LOCALS  shift, and go to state 15

    locals  go to state 16


State 12

   15 declaration: IDENT . COMMA declaration
   16            | IDENT . COLON INTEGER
   17            | IDENT . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   18            | IDENT . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    COLON  shift, and go to state 17
    COMMA  shift, and go to state 18


State 13

    7 params: begin_params declarations . end_params
   11 declarations: declarations . SEMICOLON
   13             | declarations . SEMICOLON declaration

    END_PARAMS  shift, and go to state 19
    SEMICOLON   shift, and go to state 20

    end_params  go to state 21


State 14

   14 declarations: declaration .

    $default  reduce using rule 14 (declarations)


State 15

    8 locals: BEGIN_LOCALS . declarations END_LOCALS

    IDENT  shift, and go to state 12

    $default  reduce using rule 12 (declarations)

    declarations  go to state 22
    declaration   go to state 14


State 16

   10 function: FUNCTION IDENT SEMICOLON params locals . body

    BEGIN_BODY  shift, and go to state 23

    body  go to state 24


State 17

   16 declaration: IDENT COLON . INTEGER
   17            | IDENT COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   18            | IDENT COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    INTEGER  shift, and go to state 25
    ARRAY    shift, and go to state 26


State 18

   15 declaration: IDENT COMMA . declaration

    IDENT  shift, and go to state 12

    declaration  go to state 27


State 19

    6 end_params: END_PARAMS .

    $default  reduce using rule 6 (end_params)


State 20

   11 declarations: declarations SEMICOLON .
   13             | declarations SEMICOLON . declaration

    IDENT  shift, and go to state 12

    $default  reduce using rule 11 (declarations)

    declaration  go to state 28


State 21

    7 params: begin_params declarations end_params .

    $default  reduce using rule 7 (params)


State 22

    8 locals: BEGIN_LOCALS declarations . END_LOCALS
   11 declarations: declarations . SEMICOLON
   13             | declarations . SEMICOLON declaration

    END_LOCALS  shift, and go to state 29
    SEMICOLON   shift, and go to state 20


State 23

    9 body: BEGIN_BODY . statements END_BODY

    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    FOR       shift, and go to state 33
    CONTINUE  shift, and go to state 34
    RETURN    shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    IDENT     shift, and go to state 38

    $default  reduce using rule 20 (statements)

    statements  go to state 39
    statement   go to state 40
    var         go to state 41


State 24

   10 function: FUNCTION IDENT SEMICOLON params locals body .

    $default  reduce using rule 10 (function)


State 25

   16 declaration: IDENT COLON INTEGER .

    $default  reduce using rule 16 (declaration)


State 26

   17 declaration: IDENT COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   18            | IDENT COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 42


State 27

   15 declaration: IDENT COMMA declaration .

    $default  reduce using rule 15 (declaration)


State 28

   13 declarations: declarations SEMICOLON declaration .

    $default  reduce using rule 13 (declarations)


State 29

    8 locals: BEGIN_LOCALS declarations END_LOCALS .

    $default  reduce using rule 8 (locals)


State 30

   24 statement: IF . bool-expr THEN statements ENDIF
   25          | IF . bool-expr THEN statements ELSE statements ENDIF

    NOT      shift, and go to state 43
    TRUE     shift, and go to state 44
    FALSE    shift, and go to state 45
    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 47
    IDENT    shift, and go to state 48
    NUMBER   shift, and go to state 49

    term                       go to state 50
    multiplicative_expression  go to state 51
    bool-expr                  go to state 52
    relation-and-expr          go to state 53
    relation-expr              go to state 54
    expression                 go to state 55
    var                        go to state 56


State 31

   26 statement: WHILE . bool-expr BEGINLOOP statements ENDLOOP

    NOT      shift, and go to state 43
    TRUE     shift, and go to state 44
    FALSE    shift, and go to state 45
    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 47
    IDENT    shift, and go to state 48
    NUMBER   shift, and go to state 49

    term                       go to state 50
    multiplicative_expression  go to state 51
    bool-expr                  go to state 57
    relation-and-expr          go to state 53
    relation-expr              go to state 54
    expression                 go to state 55
    var                        go to state 56


State 32

   27 statement: DO . BEGINLOOP statements ENDLOOP WHILE bool-expr

    BEGINLOOP  shift, and go to state 58


State 33

   28 statement: FOR . var ASSIGN NUMBER SEMICOLON bool-expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    IDENT  shift, and go to state 38

    var  go to state 59


State 34

   31 statement: CONTINUE .

    $default  reduce using rule 31 (statement)


State 35

   32 statement: RETURN . expression

    SUB     shift, and go to state 46
    IDENT   shift, and go to state 48
    NUMBER  shift, and go to state 49

    term                       go to state 50
    multiplicative_expression  go to state 51
    expression                 go to state 60
    var                        go to state 56


State 36

   29 statement: READ . vars

    IDENT  shift, and go to state 38

    vars  go to state 61
    var   go to state 62


State 37

   30 statement: WRITE . vars

    IDENT  shift, and go to state 38

    vars  go to state 63
    var   go to state 62


State 38

   70 var: IDENT .
   71    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   72    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 64

    $default  reduce using rule 70 (var)


State 39

    9 body: BEGIN_BODY statements . END_BODY
   19 statements: statements . SEMICOLON
   21           | statements . SEMICOLON statement

    END_BODY   shift, and go to state 65
    SEMICOLON  shift, and go to state 66


State 40

   22 statements: statement .

    $default  reduce using rule 22 (statements)


State 41

   23 statement: var . ASSIGN expression

    ASSIGN  shift, and go to state 67


State 42

   17 declaration: IDENT COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER
   18            | IDENT COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 68


State 43

   50 relation-expr: NOT . expression comp expression
   53              | NOT . TRUE
   54              | NOT . FALSE
   56              | NOT . L_PAREN bool-expr R_PAREN

    TRUE     shift, and go to state 69
    FALSE    shift, and go to state 70
    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 71
    IDENT    shift, and go to state 48
    NUMBER   shift, and go to state 49

    term                       go to state 50
    multiplicative_expression  go to state 51
    expression                 go to state 72
    var                        go to state 56


State 44

   51 relation-expr: TRUE .

    $default  reduce using rule 51 (relation-expr)


State 45

   52 relation-expr: FALSE .

    $default  reduce using rule 52 (relation-expr)


State 46

   36 term: SUB . var
   37     | SUB . NUMBER
   38     | SUB . L_PAREN expression R_PAREN
   39     | SUB . IDENT L_PAREN expression_chain R_PAREN

    L_PAREN  shift, and go to state 73
    IDENT    shift, and go to state 74
    NUMBER   shift, and go to state 75

    var  go to state 76


State 47

   55 relation-expr: L_PAREN . bool-expr R_PAREN

    NOT      shift, and go to state 43
    TRUE     shift, and go to state 44
    FALSE    shift, and go to state 45
    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 47
    IDENT    shift, and go to state 48
    NUMBER   shift, and go to state 49

    term                       go to state 50
    multiplicative_expression  go to state 51
    bool-expr                  go to state 77
    relation-and-expr          go to state 53
    relation-expr              go to state 54
    expression                 go to state 55
    var                        go to state 56


State 48

   35 term: IDENT . L_PAREN expression_chain R_PAREN
   70 var: IDENT .
   71    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   72    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_PAREN           shift, and go to state 78
    L_SQUARE_BRACKET  shift, and go to state 64

    $default  reduce using rule 70 (var)


State 49

   34 term: NUMBER .

    $default  reduce using rule 34 (term)


State 50

   41 multiplicative_expression: term . MULT multiplicative_expression_0
   42                          | term . DIV multiplicative_expression_0
   43                          | term . MOD multiplicative_expression_0
   44                          | term .

    MULT  shift, and go to state 79
    DIV   shift, and go to state 80
    MOD   shift, and go to state 81

    $default  reduce using rule 44 (multiplicative_expression)


State 51

   63 expression: multiplicative_expression . ADD expression
   64           | multiplicative_expression . SUB expression
   65           | multiplicative_expression .

    ADD  shift, and go to state 82
    SUB  shift, and go to state 83

    $default  reduce using rule 65 (expression)


State 52

   24 statement: IF bool-expr . THEN statements ENDIF
   25          | IF bool-expr . THEN statements ELSE statements ENDIF

    THEN  shift, and go to state 84


State 53

   45 bool-expr: relation-and-expr . OR bool-expr
   46          | relation-and-expr .

    OR  shift, and go to state 85

    $default  reduce using rule 46 (bool-expr)


State 54

   47 relation-and-expr: relation-expr . AND relation-and-expr
   48                  | relation-expr .

    AND  shift, and go to state 86

    $default  reduce using rule 48 (relation-and-expr)


State 55

   49 relation-expr: expression . comp expression

    EQ   shift, and go to state 87
    NEQ  shift, and go to state 88
    LT   shift, and go to state 89
    GT   shift, and go to state 90
    LTE  shift, and go to state 91
    GTE  shift, and go to state 92

    comp  go to state 93


State 56

   33 term: var .

    $default  reduce using rule 33 (term)


State 57

   26 statement: WHILE bool-expr . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 94


State 58

   27 statement: DO BEGINLOOP . statements ENDLOOP WHILE bool-expr

    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    FOR       shift, and go to state 33
    CONTINUE  shift, and go to state 34
    RETURN    shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    IDENT     shift, and go to state 38

    $default  reduce using rule 20 (statements)

    statements  go to state 95
    statement   go to state 40
    var         go to state 41


State 59

   28 statement: FOR var . ASSIGN NUMBER SEMICOLON bool-expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    ASSIGN  shift, and go to state 96


State 60

   32 statement: RETURN expression .

    $default  reduce using rule 32 (statement)


State 61

   29 statement: READ vars .
   68 vars: vars . COMMA var

    COMMA  shift, and go to state 97

    $default  reduce using rule 29 (statement)


State 62

   69 vars: var .

    $default  reduce using rule 69 (vars)


State 63

   30 statement: WRITE vars .
   68 vars: vars . COMMA var

    COMMA  shift, and go to state 97

    $default  reduce using rule 30 (statement)


State 64

   71 var: IDENT L_SQUARE_BRACKET . expression R_SQUARE_BRACKET
   72    | IDENT L_SQUARE_BRACKET . expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    SUB     shift, and go to state 46
    IDENT   shift, and go to state 48
    NUMBER  shift, and go to state 49

    term                       go to state 50
    multiplicative_expression  go to state 51
    expression                 go to state 98
    var                        go to state 56


State 65

    9 body: BEGIN_BODY statements END_BODY .

    $default  reduce using rule 9 (body)


State 66

   19 statements: statements SEMICOLON .
   21           | statements SEMICOLON . statement

    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    FOR       shift, and go to state 33
    CONTINUE  shift, and go to state 34
    RETURN    shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    IDENT     shift, and go to state 38

    $default  reduce using rule 19 (statements)

    statement  go to state 99
    var        go to state 41


State 67

   23 statement: var ASSIGN . expression

    SUB     shift, and go to state 46
    IDENT   shift, and go to state 48
    NUMBER  shift, and go to state 49

    term                       go to state 50
    multiplicative_expression  go to state 51
    expression                 go to state 100
    var                        go to state 56


State 68

   17 declaration: IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER
   18            | IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 101


State 69

   53 relation-expr: NOT TRUE .

    $default  reduce using rule 53 (relation-expr)


State 70

   54 relation-expr: NOT FALSE .

    $default  reduce using rule 54 (relation-expr)


State 71

   56 relation-expr: NOT L_PAREN . bool-expr R_PAREN

    NOT      shift, and go to state 43
    TRUE     shift, and go to state 44
    FALSE    shift, and go to state 45
    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 47
    IDENT    shift, and go to state 48
    NUMBER   shift, and go to state 49

    term                       go to state 50
    multiplicative_expression  go to state 51
    bool-expr                  go to state 102
    relation-and-expr          go to state 53
    relation-expr              go to state 54
    expression                 go to state 55
    var                        go to state 56


State 72

   50 relation-expr: NOT expression . comp expression

    EQ   shift, and go to state 87
    NEQ  shift, and go to state 88
    LT   shift, and go to state 89
    GT   shift, and go to state 90
    LTE  shift, and go to state 91
    GTE  shift, and go to state 92

    comp  go to state 103


State 73

   38 term: SUB L_PAREN . expression R_PAREN

    SUB     shift, and go to state 46
    IDENT   shift, and go to state 48
    NUMBER  shift, and go to state 49

    term                       go to state 50
    multiplicative_expression  go to state 51
    expression                 go to state 104
    var                        go to state 56


State 74

   39 term: SUB IDENT . L_PAREN expression_chain R_PAREN
   70 var: IDENT .
   71    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   72    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_PAREN           shift, and go to state 105
    L_SQUARE_BRACKET  shift, and go to state 64

    $default  reduce using rule 70 (var)


State 75

   37 term: SUB NUMBER .

    $default  reduce using rule 37 (term)


State 76

   36 term: SUB var .

    $default  reduce using rule 36 (term)


State 77

   55 relation-expr: L_PAREN bool-expr . R_PAREN

    R_PAREN  shift, and go to state 106


State 78

   35 term: IDENT L_PAREN . expression_chain R_PAREN

    SUB     shift, and go to state 46
    IDENT   shift, and go to state 48
    NUMBER  shift, and go to state 49

    term                       go to state 50
    multiplicative_expression  go to state 51
    expression                 go to state 107
    expression_chain           go to state 108
    var                        go to state 56


State 79

   41 multiplicative_expression: term MULT . multiplicative_expression_0

    SUB     shift, and go to state 46
    IDENT   shift, and go to state 48
    NUMBER  shift, and go to state 49

    term                         go to state 50
    multiplicative_expression_0  go to state 109
    multiplicative_expression    go to state 110
    var                          go to state 56


State 80

   42 multiplicative_expression: term DIV . multiplicative_expression_0

    SUB     shift, and go to state 46
    IDENT   shift, and go to state 48
    NUMBER  shift, and go to state 49

    term                         go to state 50
    multiplicative_expression_0  go to state 111
    multiplicative_expression    go to state 110
    var                          go to state 56


State 81

   43 multiplicative_expression: term MOD . multiplicative_expression_0

    SUB     shift, and go to state 46
    IDENT   shift, and go to state 48
    NUMBER  shift, and go to state 49

    term                         go to state 50
    multiplicative_expression_0  go to state 112
    multiplicative_expression    go to state 110
    var                          go to state 56


State 82

   63 expression: multiplicative_expression ADD . expression

    SUB     shift, and go to state 46
    IDENT   shift, and go to state 48
    NUMBER  shift, and go to state 49

    term                       go to state 50
    multiplicative_expression  go to state 51
    expression                 go to state 113
    var                        go to state 56


State 83

   64 expression: multiplicative_expression SUB . expression

    SUB     shift, and go to state 46
    IDENT   shift, and go to state 48
    NUMBER  shift, and go to state 49

    term                       go to state 50
    multiplicative_expression  go to state 51
    expression                 go to state 114
    var                        go to state 56


State 84

   24 statement: IF bool-expr THEN . statements ENDIF
   25          | IF bool-expr THEN . statements ELSE statements ENDIF

    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    FOR       shift, and go to state 33
    CONTINUE  shift, and go to state 34
    RETURN    shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    IDENT     shift, and go to state 38

    $default  reduce using rule 20 (statements)

    statements  go to state 115
    statement   go to state 40
    var         go to state 41


State 85

   45 bool-expr: relation-and-expr OR . bool-expr

    NOT      shift, and go to state 43
    TRUE     shift, and go to state 44
    FALSE    shift, and go to state 45
    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 47
    IDENT    shift, and go to state 48
    NUMBER   shift, and go to state 49

    term                       go to state 50
    multiplicative_expression  go to state 51
    bool-expr                  go to state 116
    relation-and-expr          go to state 53
    relation-expr              go to state 54
    expression                 go to state 55
    var                        go to state 56


State 86

   47 relation-and-expr: relation-expr AND . relation-and-expr

    NOT      shift, and go to state 43
    TRUE     shift, and go to state 44
    FALSE    shift, and go to state 45
    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 47
    IDENT    shift, and go to state 48
    NUMBER   shift, and go to state 49

    term                       go to state 50
    multiplicative_expression  go to state 51
    relation-and-expr          go to state 117
    relation-expr              go to state 54
    expression                 go to state 55
    var                        go to state 56


State 87

   57 comp: EQ .

    $default  reduce using rule 57 (comp)


State 88

   58 comp: NEQ .

    $default  reduce using rule 58 (comp)


State 89

   59 comp: LT .

    $default  reduce using rule 59 (comp)


State 90

   60 comp: GT .

    $default  reduce using rule 60 (comp)


State 91

   61 comp: LTE .

    $default  reduce using rule 61 (comp)


State 92

   62 comp: GTE .

    $default  reduce using rule 62 (comp)


State 93

   49 relation-expr: expression comp . expression

    SUB     shift, and go to state 46
    IDENT   shift, and go to state 48
    NUMBER  shift, and go to state 49

    term                       go to state 50
    multiplicative_expression  go to state 51
    expression                 go to state 118
    var                        go to state 56


State 94

   26 statement: WHILE bool-expr BEGINLOOP . statements ENDLOOP

    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    FOR       shift, and go to state 33
    CONTINUE  shift, and go to state 34
    RETURN    shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    IDENT     shift, and go to state 38

    $default  reduce using rule 20 (statements)

    statements  go to state 119
    statement   go to state 40
    var         go to state 41


State 95

   19 statements: statements . SEMICOLON
   21           | statements . SEMICOLON statement
   27 statement: DO BEGINLOOP statements . ENDLOOP WHILE bool-expr

    ENDLOOP    shift, and go to state 120
    SEMICOLON  shift, and go to state 66


State 96

   28 statement: FOR var ASSIGN . NUMBER SEMICOLON bool-expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    NUMBER  shift, and go to state 121


State 97

   68 vars: vars COMMA . var

    IDENT  shift, and go to state 38

    var  go to state 122


State 98

   71 var: IDENT L_SQUARE_BRACKET expression . R_SQUARE_BRACKET
   72    | IDENT L_SQUARE_BRACKET expression . R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 123


State 99

   21 statements: statements SEMICOLON statement .

    $default  reduce using rule 21 (statements)


State 100

   23 statement: var ASSIGN expression .

    $default  reduce using rule 23 (statement)


State 101

   17 declaration: IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER
   18            | IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    OF                shift, and go to state 124
    L_SQUARE_BRACKET  shift, and go to state 125


State 102

   56 relation-expr: NOT L_PAREN bool-expr . R_PAREN

    R_PAREN  shift, and go to state 126


State 103

   50 relation-expr: NOT expression comp . expression

    SUB     shift, and go to state 46
    IDENT   shift, and go to state 48
    NUMBER  shift, and go to state 49

    term                       go to state 50
    multiplicative_expression  go to state 51
    expression                 go to state 127
    var                        go to state 56


State 104

   38 term: SUB L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 128


State 105

   39 term: SUB IDENT L_PAREN . expression_chain R_PAREN

    SUB     shift, and go to state 46
    IDENT   shift, and go to state 48
    NUMBER  shift, and go to state 49

    term                       go to state 50
    multiplicative_expression  go to state 51
    expression                 go to state 107
    expression_chain           go to state 129
    var                        go to state 56


State 106

   55 relation-expr: L_PAREN bool-expr R_PAREN .

    $default  reduce using rule 55 (relation-expr)


State 107

   67 expression_chain: expression .

    $default  reduce using rule 67 (expression_chain)


State 108

   35 term: IDENT L_PAREN expression_chain . R_PAREN
   66 expression_chain: expression_chain . COMMA expression

    R_PAREN  shift, and go to state 130
    COMMA    shift, and go to state 131


State 109

   41 multiplicative_expression: term MULT multiplicative_expression_0 .

    $default  reduce using rule 41 (multiplicative_expression)


State 110

   40 multiplicative_expression_0: multiplicative_expression .

    $default  reduce using rule 40 (multiplicative_expression_0)


State 111

   42 multiplicative_expression: term DIV multiplicative_expression_0 .

    $default  reduce using rule 42 (multiplicative_expression)


State 112

   43 multiplicative_expression: term MOD multiplicative_expression_0 .

    $default  reduce using rule 43 (multiplicative_expression)


State 113

   63 expression: multiplicative_expression ADD expression .

    $default  reduce using rule 63 (expression)


State 114

   64 expression: multiplicative_expression SUB expression .

    $default  reduce using rule 64 (expression)


State 115

   19 statements: statements . SEMICOLON
   21           | statements . SEMICOLON statement
   24 statement: IF bool-expr THEN statements . ENDIF
   25          | IF bool-expr THEN statements . ELSE statements ENDIF

    ELSE       shift, and go to state 132
    ENDIF      shift, and go to state 133
    SEMICOLON  shift, and go to state 66


State 116

   45 bool-expr: relation-and-expr OR bool-expr .

    $default  reduce using rule 45 (bool-expr)


State 117

   47 relation-and-expr: relation-expr AND relation-and-expr .

    $default  reduce using rule 47 (relation-and-expr)


State 118

   49 relation-expr: expression comp expression .

    $default  reduce using rule 49 (relation-expr)


State 119

   19 statements: statements . SEMICOLON
   21           | statements . SEMICOLON statement
   26 statement: WHILE bool-expr BEGINLOOP statements . ENDLOOP

    ENDLOOP    shift, and go to state 134
    SEMICOLON  shift, and go to state 66


State 120

   27 statement: DO BEGINLOOP statements ENDLOOP . WHILE bool-expr

    WHILE  shift, and go to state 135


State 121

   28 statement: FOR var ASSIGN NUMBER . SEMICOLON bool-expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    SEMICOLON  shift, and go to state 136


State 122

   68 vars: vars COMMA var .

    $default  reduce using rule 68 (vars)


State 123

   71 var: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET .
   72    | IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 137

    $default  reduce using rule 71 (var)


State 124

   17 declaration: IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 138


State 125

   18 declaration: IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 139


State 126

   56 relation-expr: NOT L_PAREN bool-expr R_PAREN .

    $default  reduce using rule 56 (relation-expr)


State 127

   50 relation-expr: NOT expression comp expression .

    $default  reduce using rule 50 (relation-expr)


State 128

   38 term: SUB L_PAREN expression R_PAREN .

    $default  reduce using rule 38 (term)


State 129

   39 term: SUB IDENT L_PAREN expression_chain . R_PAREN
   66 expression_chain: expression_chain . COMMA expression

    R_PAREN  shift, and go to state 140
    COMMA    shift, and go to state 131


State 130

   35 term: IDENT L_PAREN expression_chain R_PAREN .

    $default  reduce using rule 35 (term)


State 131

   66 expression_chain: expression_chain COMMA . expression

    SUB     shift, and go to state 46
    IDENT   shift, and go to state 48
    NUMBER  shift, and go to state 49

    term                       go to state 50
    multiplicative_expression  go to state 51
    expression                 go to state 141
    var                        go to state 56


State 132

   25 statement: IF bool-expr THEN statements ELSE . statements ENDIF

    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    FOR       shift, and go to state 33
    CONTINUE  shift, and go to state 34
    RETURN    shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    IDENT     shift, and go to state 38

    $default  reduce using rule 20 (statements)

    statements  go to state 142
    statement   go to state 40
    var         go to state 41


State 133

   24 statement: IF bool-expr THEN statements ENDIF .

    $default  reduce using rule 24 (statement)


State 134

   26 statement: WHILE bool-expr BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 26 (statement)


State 135

   27 statement: DO BEGINLOOP statements ENDLOOP WHILE . bool-expr

    NOT      shift, and go to state 43
    TRUE     shift, and go to state 44
    FALSE    shift, and go to state 45
    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 47
    IDENT    shift, and go to state 48
    NUMBER   shift, and go to state 49

    term                       go to state 50
    multiplicative_expression  go to state 51
    bool-expr                  go to state 143
    relation-and-expr          go to state 53
    relation-expr              go to state 54
    expression                 go to state 55
    var                        go to state 56


State 136

   28 statement: FOR var ASSIGN NUMBER SEMICOLON . bool-expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    NOT      shift, and go to state 43
    TRUE     shift, and go to state 44
    FALSE    shift, and go to state 45
    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 47
    IDENT    shift, and go to state 48
    NUMBER   shift, and go to state 49

    term                       go to state 50
    multiplicative_expression  go to state 51
    bool-expr                  go to state 144
    relation-and-expr          go to state 53
    relation-expr              go to state 54
    expression                 go to state 55
    var                        go to state 56


State 137

   72 var: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    SUB     shift, and go to state 46
    IDENT   shift, and go to state 48
    NUMBER  shift, and go to state 49

    term                       go to state 50
    multiplicative_expression  go to state 51
    expression                 go to state 145
    var                        go to state 56


State 138

   17 declaration: IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 17 (declaration)


State 139

   18 declaration: IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 146


State 140

   39 term: SUB IDENT L_PAREN expression_chain R_PAREN .

    $default  reduce using rule 39 (term)


State 141

   66 expression_chain: expression_chain COMMA expression .

    $default  reduce using rule 66 (expression_chain)


State 142

   19 statements: statements . SEMICOLON
   21           | statements . SEMICOLON statement
   25 statement: IF bool-expr THEN statements ELSE statements . ENDIF

    ENDIF      shift, and go to state 147
    SEMICOLON  shift, and go to state 66


State 143

   27 statement: DO BEGINLOOP statements ENDLOOP WHILE bool-expr .

    $default  reduce using rule 27 (statement)


State 144

   28 statement: FOR var ASSIGN NUMBER SEMICOLON bool-expr . SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    SEMICOLON  shift, and go to state 148


State 145

   72 var: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 149


State 146

   18 declaration: IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 150


State 147

   25 statement: IF bool-expr THEN statements ELSE statements ENDIF .

    $default  reduce using rule 25 (statement)


State 148

   28 statement: FOR var ASSIGN NUMBER SEMICOLON bool-expr SEMICOLON . var ASSIGN expression BEGINLOOP statements ENDLOOP

    IDENT  shift, and go to state 38

    var  go to state 151


State 149

   72 var: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 72 (var)


State 150

   18 declaration: IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 152


State 151

   28 statement: FOR var ASSIGN NUMBER SEMICOLON bool-expr SEMICOLON var . ASSIGN expression BEGINLOOP statements ENDLOOP

    ASSIGN  shift, and go to state 153


State 152

   18 declaration: IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 18 (declaration)


State 153

   28 statement: FOR var ASSIGN NUMBER SEMICOLON bool-expr SEMICOLON var ASSIGN . expression BEGINLOOP statements ENDLOOP

    SUB     shift, and go to state 46
    IDENT   shift, and go to state 48
    NUMBER  shift, and go to state 49

    term                       go to state 50
    multiplicative_expression  go to state 51
    expression                 go to state 154
    var                        go to state 56


State 154

   28 statement: FOR var ASSIGN NUMBER SEMICOLON bool-expr SEMICOLON var ASSIGN expression . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 155


State 155

   28 statement: FOR var ASSIGN NUMBER SEMICOLON bool-expr SEMICOLON var ASSIGN expression BEGINLOOP . statements ENDLOOP

    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    FOR       shift, and go to state 33
    CONTINUE  shift, and go to state 34
    RETURN    shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    IDENT     shift, and go to state 38

    $default  reduce using rule 20 (statements)

    statements  go to state 156
    statement   go to state 40
    var         go to state 41


State 156

   19 statements: statements . SEMICOLON
   21           | statements . SEMICOLON statement
   28 statement: FOR var ASSIGN NUMBER SEMICOLON bool-expr SEMICOLON var ASSIGN expression BEGINLOOP statements . ENDLOOP

    ENDLOOP    shift, and go to state 157
    SEMICOLON  shift, and go to state 66


State 157

   28 statement: FOR var ASSIGN NUMBER SEMICOLON bool-expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 28 (statement)
