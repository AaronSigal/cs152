Terminals unused in grammar

    FOREACH
    IN


State 0 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: functions

    2 functions: %empty
    3          | functions function
    4          | function

    5 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    6 declarations: declarations SEMICOLON
    7             | %empty
    8             | declarations SEMICOLON declaration
    9             | declaration

   10 declaration: IDENT COMMA declaration
   11            | IDENT COLON INTEGER
   12            | IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   13            | IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

   14 statements: statements SEMICOLON
   15           | %empty
   16           | statements SEMICOLON statement
   17           | statement

   18 statement: var ASSIGN expression
   19          | IF bool-expr THEN statements ENDIF
   20          | IF bool-expr THEN statements ELSE statements ENDIF
   21          | WHILE bool-expr BEGINLOOP statements ENDLOOP
   22          | DO BEGINLOOP statements ENDLOOP WHILE bool-expr
   23          | FOR var ASSIGN NUMBER SEMICOLON bool-expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP
   24          | READ vars
   25          | WRITE vars
   26          | CONTINUE
   27          | RETURN expression

   28 term: var
   29     | NUMBER
   30     | L_PAREN expression R_PAREN
   31     | IDENT L_PAREN expression_chain R_PAREN
   32     | SUB var
   33     | SUB NUMBER
   34     | SUB L_PAREN expression R_PAREN
   35     | SUB IDENT L_PAREN expression_chain R_PAREN

   36 multiplicative_expression_0: multiplicative_expression

   37 multiplicative_expression: term MULT multiplicative_expression_0
   38                          | term DIV multiplicative_expression_0
   39                          | term MOD multiplicative_expression_0
   40                          | term

   41 bool-expr: relation-and-expr OR bool-expr
   42          | relation-and-expr

   43 relation-and-expr: relation-expr AND relation-and-expr
   44                  | relation-expr

   45 relation-expr: expression comp expression
   46              | NOT expression comp expression
   47              | TRUE
   48              | FALSE
   49              | NOT TRUE
   50              | NOT FALSE
   51              | L_PAREN bool-expr R_PAREN
   52              | NOT L_PAREN bool-expr R_PAREN

   53 comp: EQ
   54     | NEQ
   55     | LT
   56     | GT
   57     | LTE
   58     | GTE

   59 expression: multiplicative_expression ADD expression
   60           | multiplicative_expression SUB expression
   61           | multiplicative_expression

   62 expression_chain: expression_chain COMMA expression
   63                 | expression

   64 vars: vars COMMA var
   65     | var

   66 var: IDENT
   67    | IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   68    | IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    AND (258) 43
    OR (259) 41
    NOT (260) 46 49 50 52
    TRUE (261) 47 49
    FALSE (262) 48 50
    IF (263) 19 20
    THEN (264) 19 20
    ELSE (265) 20
    ENDIF (266) 19 20
    WHILE (267) 21 22
    DO (268) 22
    BEGINLOOP (269) 21 22 23
    ENDLOOP (270) 21 22 23
    FOR (271) 23
    FOREACH (272)
    IN (273)
    CONTINUE (274) 26
    FUNCTION (275) 5
    RETURN (276) 27
    BEGIN_PARAMS (277) 5
    END_PARAMS (278) 5
    BEGIN_LOCALS (279) 5
    END_LOCALS (280) 5
    BEGIN_BODY (281) 5
    END_BODY (282) 5
    INTEGER (283) 11 12 13
    ARRAY (284) 12 13
    OF (285) 12 13
    READ (286) 24
    WRITE (287) 25
    ADD (288) 59
    SUB (289) 32 33 34 35 60
    MULT (290) 37
    DIV (291) 38
    MOD (292) 39
    EQ (293) 53
    ASSIGN (294) 18 23
    NEQ (295) 54
    LT (296) 55
    GT (297) 56
    LTE (298) 57
    GTE (299) 58
    L_PAREN (300) 30 31 34 35 51 52
    R_PAREN (301) 30 31 34 35 51 52
    L_SQUARE_BRACKET (302) 12 13 67 68
    R_SQUARE_BRACKET (303) 12 13 67 68
    SEMICOLON (304) 5 6 8 14 16 23
    COLON (305) 11 12 13
    COMMA (306) 10 62 64
    NUMBER <ival> (307) 12 13 23 29 33
    IDENT <sval> (308) 5 10 11 12 13 31 35 66 67 68


Nonterminals, with rules where they appear

    $accept (54)
        on left: 0
    program (55)
        on left: 1
        on right: 0
    functions (56)
        on left: 2 3 4
        on right: 1 3
    function (57)
        on left: 5
        on right: 3 4
    declarations (58)
        on left: 6 7 8 9
        on right: 5 6 8
    declaration (59)
        on left: 10 11 12 13
        on right: 8 9 10
    statements (60)
        on left: 14 15 16 17
        on right: 5 14 16 19 20 21 22 23
    statement (61)
        on left: 18 19 20 21 22 23 24 25 26 27
        on right: 16 17
    term (62)
        on left: 28 29 30 31 32 33 34 35
        on right: 37 38 39 40
    multiplicative_expression_0 (63)
        on left: 36
        on right: 37 38 39
    multiplicative_expression (64)
        on left: 37 38 39 40
        on right: 36 59 60 61
    bool-expr (65)
        on left: 41 42
        on right: 19 20 21 22 23 41 51 52
    relation-and-expr (66)
        on left: 43 44
        on right: 41 42 43
    relation-expr (67)
        on left: 45 46 47 48 49 50 51 52
        on right: 43 44
    comp (68)
        on left: 53 54 55 56 57 58
        on right: 45 46
    expression (69)
        on left: 59 60 61
        on right: 18 23 27 30 34 45 46 59 60 62 63 67 68
    expression_chain (70)
        on left: 62 63
        on right: 31 35 62
    vars (71)
        on left: 64 65
        on right: 24 25 64
    var (72)
        on left: 66 67 68
        on right: 18 23 28 32 64 65


State 0

    0 $accept: . program $end

    FUNCTION  shift, and go to state 1

    FUNCTION  [reduce using rule 2 (functions)]
    $default  reduce using rule 2 (functions)

    program    go to state 2
    functions  go to state 3
    function   go to state 4


State 1

    5 function: FUNCTION . IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 5


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    1 program: functions .
    3 functions: functions . function

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 1 (program)

    function  go to state 7


State 4

    4 functions: function .

    $default  reduce using rule 4 (functions)


State 5

    5 function: FUNCTION IDENT . SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    SEMICOLON  shift, and go to state 8


State 6

    0 $accept: program $end .

    $default  accept


State 7

    3 functions: functions function .

    $default  reduce using rule 3 (functions)


State 8

    5 function: FUNCTION IDENT SEMICOLON . BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_PARAMS  shift, and go to state 9


State 9

    5 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS . declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 10

    $default  reduce using rule 7 (declarations)

    declarations  go to state 11
    declaration   go to state 12


State 10

   10 declaration: IDENT . COMMA declaration
   11            | IDENT . COLON INTEGER
   12            | IDENT . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   13            | IDENT . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    COLON  shift, and go to state 13
    COMMA  shift, and go to state 14


State 11

    5 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations . END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY
    6 declarations: declarations . SEMICOLON
    8             | declarations . SEMICOLON declaration

    END_PARAMS  shift, and go to state 15
    SEMICOLON   shift, and go to state 16


State 12

    9 declarations: declaration .

    $default  reduce using rule 9 (declarations)


State 13

   11 declaration: IDENT COLON . INTEGER
   12            | IDENT COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   13            | IDENT COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    INTEGER  shift, and go to state 17
    ARRAY    shift, and go to state 18


State 14

   10 declaration: IDENT COMMA . declaration

    IDENT  shift, and go to state 10

    declaration  go to state 19


State 15

    5 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS . BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_LOCALS  shift, and go to state 20


State 16

    6 declarations: declarations SEMICOLON .
    8             | declarations SEMICOLON . declaration

    IDENT  shift, and go to state 10

    $default  reduce using rule 6 (declarations)

    declaration  go to state 21


State 17

   11 declaration: IDENT COLON INTEGER .

    $default  reduce using rule 11 (declaration)


State 18

   12 declaration: IDENT COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   13            | IDENT COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 22


State 19

   10 declaration: IDENT COMMA declaration .

    $default  reduce using rule 10 (declaration)


State 20

    5 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS . declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 10

    $default  reduce using rule 7 (declarations)

    declarations  go to state 23
    declaration   go to state 12


State 21

    8 declarations: declarations SEMICOLON declaration .

    $default  reduce using rule 8 (declarations)


State 22

   12 declaration: IDENT COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER
   13            | IDENT COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 24


State 23

    5 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations . END_LOCALS BEGIN_BODY statements END_BODY
    6 declarations: declarations . SEMICOLON
    8             | declarations . SEMICOLON declaration

    END_LOCALS  shift, and go to state 25
    SEMICOLON   shift, and go to state 16


State 24

   12 declaration: IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER
   13            | IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 26


State 25

    5 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS . BEGIN_BODY statements END_BODY

    BEGIN_BODY  shift, and go to state 27


State 26

   12 declaration: IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER
   13            | IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    OF                shift, and go to state 28
    L_SQUARE_BRACKET  shift, and go to state 29


State 27

    5 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY . statements END_BODY

    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    FOR       shift, and go to state 33
    CONTINUE  shift, and go to state 34
    RETURN    shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    IDENT     shift, and go to state 38

    $default  reduce using rule 15 (statements)

    statements  go to state 39
    statement   go to state 40
    var         go to state 41


State 28

   12 declaration: IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 42


State 29

   13 declaration: IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 43


State 30

   19 statement: IF . bool-expr THEN statements ENDIF
   20          | IF . bool-expr THEN statements ELSE statements ENDIF

    NOT      shift, and go to state 44
    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 48
    NUMBER   shift, and go to state 49
    IDENT    shift, and go to state 50

    term                       go to state 51
    multiplicative_expression  go to state 52
    bool-expr                  go to state 53
    relation-and-expr          go to state 54
    relation-expr              go to state 55
    expression                 go to state 56
    var                        go to state 57


State 31

   21 statement: WHILE . bool-expr BEGINLOOP statements ENDLOOP

    NOT      shift, and go to state 44
    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 48
    NUMBER   shift, and go to state 49
    IDENT    shift, and go to state 50

    term                       go to state 51
    multiplicative_expression  go to state 52
    bool-expr                  go to state 58
    relation-and-expr          go to state 54
    relation-expr              go to state 55
    expression                 go to state 56
    var                        go to state 57


State 32

   22 statement: DO . BEGINLOOP statements ENDLOOP WHILE bool-expr

    BEGINLOOP  shift, and go to state 59


State 33

   23 statement: FOR . var ASSIGN NUMBER SEMICOLON bool-expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    IDENT  shift, and go to state 38

    var  go to state 60


State 34

   26 statement: CONTINUE .

    $default  reduce using rule 26 (statement)


State 35

   27 statement: RETURN . expression

    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 61
    NUMBER   shift, and go to state 49
    IDENT    shift, and go to state 50

    term                       go to state 51
    multiplicative_expression  go to state 52
    expression                 go to state 62
    var                        go to state 57


State 36

   24 statement: READ . vars

    IDENT  shift, and go to state 38

    vars  go to state 63
    var   go to state 64


State 37

   25 statement: WRITE . vars

    IDENT  shift, and go to state 38

    vars  go to state 65
    var   go to state 64


State 38

   66 var: IDENT .
   67    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   68    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 66

    $default  reduce using rule 66 (var)


State 39

    5 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements . END_BODY
   14 statements: statements . SEMICOLON
   16           | statements . SEMICOLON statement

    END_BODY   shift, and go to state 67
    SEMICOLON  shift, and go to state 68


State 40

   17 statements: statement .

    $default  reduce using rule 17 (statements)


State 41

   18 statement: var . ASSIGN expression

    ASSIGN  shift, and go to state 69


State 42

   12 declaration: IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 12 (declaration)


State 43

   13 declaration: IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 70


State 44

   46 relation-expr: NOT . expression comp expression
   49              | NOT . TRUE
   50              | NOT . FALSE
   52              | NOT . L_PAREN bool-expr R_PAREN

    TRUE     shift, and go to state 71
    FALSE    shift, and go to state 72
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 73
    NUMBER   shift, and go to state 49
    IDENT    shift, and go to state 50

    term                       go to state 51
    multiplicative_expression  go to state 52
    expression                 go to state 74
    var                        go to state 57


State 45

   47 relation-expr: TRUE .

    $default  reduce using rule 47 (relation-expr)


State 46

   48 relation-expr: FALSE .

    $default  reduce using rule 48 (relation-expr)


State 47

   32 term: SUB . var
   33     | SUB . NUMBER
   34     | SUB . L_PAREN expression R_PAREN
   35     | SUB . IDENT L_PAREN expression_chain R_PAREN

    L_PAREN  shift, and go to state 75
    NUMBER   shift, and go to state 76
    IDENT    shift, and go to state 77

    var  go to state 78


State 48

   30 term: L_PAREN . expression R_PAREN
   51 relation-expr: L_PAREN . bool-expr R_PAREN

    NOT      shift, and go to state 44
    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 48
    NUMBER   shift, and go to state 49
    IDENT    shift, and go to state 50

    term                       go to state 51
    multiplicative_expression  go to state 52
    bool-expr                  go to state 79
    relation-and-expr          go to state 54
    relation-expr              go to state 55
    expression                 go to state 80
    var                        go to state 57


State 49

   29 term: NUMBER .

    $default  reduce using rule 29 (term)


State 50

   31 term: IDENT . L_PAREN expression_chain R_PAREN
   66 var: IDENT .
   67    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   68    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_PAREN           shift, and go to state 81
    L_SQUARE_BRACKET  shift, and go to state 66

    $default  reduce using rule 66 (var)


State 51

   37 multiplicative_expression: term . MULT multiplicative_expression_0
   38                          | term . DIV multiplicative_expression_0
   39                          | term . MOD multiplicative_expression_0
   40                          | term .

    MULT  shift, and go to state 82
    DIV   shift, and go to state 83
    MOD   shift, and go to state 84

    $default  reduce using rule 40 (multiplicative_expression)


State 52

   59 expression: multiplicative_expression . ADD expression
   60           | multiplicative_expression . SUB expression
   61           | multiplicative_expression .

    ADD  shift, and go to state 85
    SUB  shift, and go to state 86

    $default  reduce using rule 61 (expression)


State 53

   19 statement: IF bool-expr . THEN statements ENDIF
   20          | IF bool-expr . THEN statements ELSE statements ENDIF

    THEN  shift, and go to state 87


State 54

   41 bool-expr: relation-and-expr . OR bool-expr
   42          | relation-and-expr .

    OR  shift, and go to state 88

    $default  reduce using rule 42 (bool-expr)


State 55

   43 relation-and-expr: relation-expr . AND relation-and-expr
   44                  | relation-expr .

    AND  shift, and go to state 89

    $default  reduce using rule 44 (relation-and-expr)


State 56

   45 relation-expr: expression . comp expression

    EQ   shift, and go to state 90
    NEQ  shift, and go to state 91
    LT   shift, and go to state 92
    GT   shift, and go to state 93
    LTE  shift, and go to state 94
    GTE  shift, and go to state 95

    comp  go to state 96


State 57

   28 term: var .

    $default  reduce using rule 28 (term)


State 58

   21 statement: WHILE bool-expr . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 97


State 59

   22 statement: DO BEGINLOOP . statements ENDLOOP WHILE bool-expr

    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    FOR       shift, and go to state 33
    CONTINUE  shift, and go to state 34
    RETURN    shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    IDENT     shift, and go to state 38

    $default  reduce using rule 15 (statements)

    statements  go to state 98
    statement   go to state 40
    var         go to state 41


State 60

   23 statement: FOR var . ASSIGN NUMBER SEMICOLON bool-expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    ASSIGN  shift, and go to state 99


State 61

   30 term: L_PAREN . expression R_PAREN

    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 61
    NUMBER   shift, and go to state 49
    IDENT    shift, and go to state 50

    term                       go to state 51
    multiplicative_expression  go to state 52
    expression                 go to state 100
    var                        go to state 57


State 62

   27 statement: RETURN expression .

    $default  reduce using rule 27 (statement)


State 63

   24 statement: READ vars .
   64 vars: vars . COMMA var

    COMMA  shift, and go to state 101

    $default  reduce using rule 24 (statement)


State 64

   65 vars: var .

    $default  reduce using rule 65 (vars)


State 65

   25 statement: WRITE vars .
   64 vars: vars . COMMA var

    COMMA  shift, and go to state 101

    $default  reduce using rule 25 (statement)


State 66

   67 var: IDENT L_SQUARE_BRACKET . expression R_SQUARE_BRACKET
   68    | IDENT L_SQUARE_BRACKET . expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 61
    NUMBER   shift, and go to state 49
    IDENT    shift, and go to state 50

    term                       go to state 51
    multiplicative_expression  go to state 52
    expression                 go to state 102
    var                        go to state 57


State 67

    5 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY .

    $default  reduce using rule 5 (function)


State 68

   14 statements: statements SEMICOLON .
   16           | statements SEMICOLON . statement

    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    FOR       shift, and go to state 33
    CONTINUE  shift, and go to state 34
    RETURN    shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    IDENT     shift, and go to state 38

    $default  reduce using rule 14 (statements)

    statement  go to state 103
    var        go to state 41


State 69

   18 statement: var ASSIGN . expression

    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 61
    NUMBER   shift, and go to state 49
    IDENT    shift, and go to state 50

    term                       go to state 51
    multiplicative_expression  go to state 52
    expression                 go to state 104
    var                        go to state 57


State 70

   13 declaration: IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 105


State 71

   49 relation-expr: NOT TRUE .

    $default  reduce using rule 49 (relation-expr)


State 72

   50 relation-expr: NOT FALSE .

    $default  reduce using rule 50 (relation-expr)


State 73

   30 term: L_PAREN . expression R_PAREN
   52 relation-expr: NOT L_PAREN . bool-expr R_PAREN

    NOT      shift, and go to state 44
    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 48
    NUMBER   shift, and go to state 49
    IDENT    shift, and go to state 50

    term                       go to state 51
    multiplicative_expression  go to state 52
    bool-expr                  go to state 106
    relation-and-expr          go to state 54
    relation-expr              go to state 55
    expression                 go to state 80
    var                        go to state 57


State 74

   46 relation-expr: NOT expression . comp expression

    EQ   shift, and go to state 90
    NEQ  shift, and go to state 91
    LT   shift, and go to state 92
    GT   shift, and go to state 93
    LTE  shift, and go to state 94
    GTE  shift, and go to state 95

    comp  go to state 107


State 75

   34 term: SUB L_PAREN . expression R_PAREN

    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 61
    NUMBER   shift, and go to state 49
    IDENT    shift, and go to state 50

    term                       go to state 51
    multiplicative_expression  go to state 52
    expression                 go to state 108
    var                        go to state 57


State 76

   33 term: SUB NUMBER .

    $default  reduce using rule 33 (term)


State 77

   35 term: SUB IDENT . L_PAREN expression_chain R_PAREN
   66 var: IDENT .
   67    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   68    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_PAREN           shift, and go to state 109
    L_SQUARE_BRACKET  shift, and go to state 66

    $default  reduce using rule 66 (var)


State 78

   32 term: SUB var .

    $default  reduce using rule 32 (term)


State 79

   51 relation-expr: L_PAREN bool-expr . R_PAREN

    R_PAREN  shift, and go to state 110


State 80

   30 term: L_PAREN expression . R_PAREN
   45 relation-expr: expression . comp expression

    EQ       shift, and go to state 90
    NEQ      shift, and go to state 91
    LT       shift, and go to state 92
    GT       shift, and go to state 93
    LTE      shift, and go to state 94
    GTE      shift, and go to state 95
    R_PAREN  shift, and go to state 111

    comp  go to state 96


State 81

   31 term: IDENT L_PAREN . expression_chain R_PAREN

    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 61
    NUMBER   shift, and go to state 49
    IDENT    shift, and go to state 50

    term                       go to state 51
    multiplicative_expression  go to state 52
    expression                 go to state 112
    expression_chain           go to state 113
    var                        go to state 57


State 82

   37 multiplicative_expression: term MULT . multiplicative_expression_0

    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 61
    NUMBER   shift, and go to state 49
    IDENT    shift, and go to state 50

    term                         go to state 51
    multiplicative_expression_0  go to state 114
    multiplicative_expression    go to state 115
    var                          go to state 57


State 83

   38 multiplicative_expression: term DIV . multiplicative_expression_0

    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 61
    NUMBER   shift, and go to state 49
    IDENT    shift, and go to state 50

    term                         go to state 51
    multiplicative_expression_0  go to state 116
    multiplicative_expression    go to state 115
    var                          go to state 57


State 84

   39 multiplicative_expression: term MOD . multiplicative_expression_0

    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 61
    NUMBER   shift, and go to state 49
    IDENT    shift, and go to state 50

    term                         go to state 51
    multiplicative_expression_0  go to state 117
    multiplicative_expression    go to state 115
    var                          go to state 57


State 85

   59 expression: multiplicative_expression ADD . expression

    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 61
    NUMBER   shift, and go to state 49
    IDENT    shift, and go to state 50

    term                       go to state 51
    multiplicative_expression  go to state 52
    expression                 go to state 118
    var                        go to state 57


State 86

   60 expression: multiplicative_expression SUB . expression

    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 61
    NUMBER   shift, and go to state 49
    IDENT    shift, and go to state 50

    term                       go to state 51
    multiplicative_expression  go to state 52
    expression                 go to state 119
    var                        go to state 57


State 87

   19 statement: IF bool-expr THEN . statements ENDIF
   20          | IF bool-expr THEN . statements ELSE statements ENDIF

    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    FOR       shift, and go to state 33
    CONTINUE  shift, and go to state 34
    RETURN    shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    IDENT     shift, and go to state 38

    $default  reduce using rule 15 (statements)

    statements  go to state 120
    statement   go to state 40
    var         go to state 41


State 88

   41 bool-expr: relation-and-expr OR . bool-expr

    NOT      shift, and go to state 44
    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 48
    NUMBER   shift, and go to state 49
    IDENT    shift, and go to state 50

    term                       go to state 51
    multiplicative_expression  go to state 52
    bool-expr                  go to state 121
    relation-and-expr          go to state 54
    relation-expr              go to state 55
    expression                 go to state 56
    var                        go to state 57


State 89

   43 relation-and-expr: relation-expr AND . relation-and-expr

    NOT      shift, and go to state 44
    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 48
    NUMBER   shift, and go to state 49
    IDENT    shift, and go to state 50

    term                       go to state 51
    multiplicative_expression  go to state 52
    relation-and-expr          go to state 122
    relation-expr              go to state 55
    expression                 go to state 56
    var                        go to state 57


State 90

   53 comp: EQ .

    $default  reduce using rule 53 (comp)


State 91

   54 comp: NEQ .

    $default  reduce using rule 54 (comp)


State 92

   55 comp: LT .

    $default  reduce using rule 55 (comp)


State 93

   56 comp: GT .

    $default  reduce using rule 56 (comp)


State 94

   57 comp: LTE .

    $default  reduce using rule 57 (comp)


State 95

   58 comp: GTE .

    $default  reduce using rule 58 (comp)


State 96

   45 relation-expr: expression comp . expression

    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 61
    NUMBER   shift, and go to state 49
    IDENT    shift, and go to state 50

    term                       go to state 51
    multiplicative_expression  go to state 52
    expression                 go to state 123
    var                        go to state 57


State 97

   21 statement: WHILE bool-expr BEGINLOOP . statements ENDLOOP

    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    FOR       shift, and go to state 33
    CONTINUE  shift, and go to state 34
    RETURN    shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    IDENT     shift, and go to state 38

    $default  reduce using rule 15 (statements)

    statements  go to state 124
    statement   go to state 40
    var         go to state 41


State 98

   14 statements: statements . SEMICOLON
   16           | statements . SEMICOLON statement
   22 statement: DO BEGINLOOP statements . ENDLOOP WHILE bool-expr

    ENDLOOP    shift, and go to state 125
    SEMICOLON  shift, and go to state 68


State 99

   23 statement: FOR var ASSIGN . NUMBER SEMICOLON bool-expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    NUMBER  shift, and go to state 126


State 100

   30 term: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 111


State 101

   64 vars: vars COMMA . var

    IDENT  shift, and go to state 38

    var  go to state 127


State 102

   67 var: IDENT L_SQUARE_BRACKET expression . R_SQUARE_BRACKET
   68    | IDENT L_SQUARE_BRACKET expression . R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 128


State 103

   16 statements: statements SEMICOLON statement .

    $default  reduce using rule 16 (statements)


State 104

   18 statement: var ASSIGN expression .

    $default  reduce using rule 18 (statement)


State 105

   13 declaration: IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 129


State 106

   52 relation-expr: NOT L_PAREN bool-expr . R_PAREN

    R_PAREN  shift, and go to state 130


State 107

   46 relation-expr: NOT expression comp . expression

    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 61
    NUMBER   shift, and go to state 49
    IDENT    shift, and go to state 50

    term                       go to state 51
    multiplicative_expression  go to state 52
    expression                 go to state 131
    var                        go to state 57


State 108

   34 term: SUB L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 132


State 109

   35 term: SUB IDENT L_PAREN . expression_chain R_PAREN

    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 61
    NUMBER   shift, and go to state 49
    IDENT    shift, and go to state 50

    term                       go to state 51
    multiplicative_expression  go to state 52
    expression                 go to state 112
    expression_chain           go to state 133
    var                        go to state 57


State 110

   51 relation-expr: L_PAREN bool-expr R_PAREN .

    $default  reduce using rule 51 (relation-expr)


State 111

   30 term: L_PAREN expression R_PAREN .

    $default  reduce using rule 30 (term)


State 112

   63 expression_chain: expression .

    $default  reduce using rule 63 (expression_chain)


State 113

   31 term: IDENT L_PAREN expression_chain . R_PAREN
   62 expression_chain: expression_chain . COMMA expression

    R_PAREN  shift, and go to state 134
    COMMA    shift, and go to state 135


State 114

   37 multiplicative_expression: term MULT multiplicative_expression_0 .

    $default  reduce using rule 37 (multiplicative_expression)


State 115

   36 multiplicative_expression_0: multiplicative_expression .

    $default  reduce using rule 36 (multiplicative_expression_0)


State 116

   38 multiplicative_expression: term DIV multiplicative_expression_0 .

    $default  reduce using rule 38 (multiplicative_expression)


State 117

   39 multiplicative_expression: term MOD multiplicative_expression_0 .

    $default  reduce using rule 39 (multiplicative_expression)


State 118

   59 expression: multiplicative_expression ADD expression .

    $default  reduce using rule 59 (expression)


State 119

   60 expression: multiplicative_expression SUB expression .

    $default  reduce using rule 60 (expression)


State 120

   14 statements: statements . SEMICOLON
   16           | statements . SEMICOLON statement
   19 statement: IF bool-expr THEN statements . ENDIF
   20          | IF bool-expr THEN statements . ELSE statements ENDIF

    ELSE       shift, and go to state 136
    ENDIF      shift, and go to state 137
    SEMICOLON  shift, and go to state 68


State 121

   41 bool-expr: relation-and-expr OR bool-expr .

    $default  reduce using rule 41 (bool-expr)


State 122

   43 relation-and-expr: relation-expr AND relation-and-expr .

    $default  reduce using rule 43 (relation-and-expr)


State 123

   45 relation-expr: expression comp expression .

    $default  reduce using rule 45 (relation-expr)


State 124

   14 statements: statements . SEMICOLON
   16           | statements . SEMICOLON statement
   21 statement: WHILE bool-expr BEGINLOOP statements . ENDLOOP

    ENDLOOP    shift, and go to state 138
    SEMICOLON  shift, and go to state 68


State 125

   22 statement: DO BEGINLOOP statements ENDLOOP . WHILE bool-expr

    WHILE  shift, and go to state 139


State 126

   23 statement: FOR var ASSIGN NUMBER . SEMICOLON bool-expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    SEMICOLON  shift, and go to state 140


State 127

   64 vars: vars COMMA var .

    $default  reduce using rule 64 (vars)


State 128

   67 var: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET .
   68    | IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 141

    $default  reduce using rule 67 (var)


State 129

   13 declaration: IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 13 (declaration)


State 130

   52 relation-expr: NOT L_PAREN bool-expr R_PAREN .

    $default  reduce using rule 52 (relation-expr)


State 131

   46 relation-expr: NOT expression comp expression .

    $default  reduce using rule 46 (relation-expr)


State 132

   34 term: SUB L_PAREN expression R_PAREN .

    $default  reduce using rule 34 (term)


State 133

   35 term: SUB IDENT L_PAREN expression_chain . R_PAREN
   62 expression_chain: expression_chain . COMMA expression

    R_PAREN  shift, and go to state 142
    COMMA    shift, and go to state 135


State 134

   31 term: IDENT L_PAREN expression_chain R_PAREN .

    $default  reduce using rule 31 (term)


State 135

   62 expression_chain: expression_chain COMMA . expression

    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 61
    NUMBER   shift, and go to state 49
    IDENT    shift, and go to state 50

    term                       go to state 51
    multiplicative_expression  go to state 52
    expression                 go to state 143
    var                        go to state 57


State 136

   20 statement: IF bool-expr THEN statements ELSE . statements ENDIF

    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    FOR       shift, and go to state 33
    CONTINUE  shift, and go to state 34
    RETURN    shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    IDENT     shift, and go to state 38

    $default  reduce using rule 15 (statements)

    statements  go to state 144
    statement   go to state 40
    var         go to state 41


State 137

   19 statement: IF bool-expr THEN statements ENDIF .

    $default  reduce using rule 19 (statement)


State 138

   21 statement: WHILE bool-expr BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 21 (statement)


State 139

   22 statement: DO BEGINLOOP statements ENDLOOP WHILE . bool-expr

    NOT      shift, and go to state 44
    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 48
    NUMBER   shift, and go to state 49
    IDENT    shift, and go to state 50

    term                       go to state 51
    multiplicative_expression  go to state 52
    bool-expr                  go to state 145
    relation-and-expr          go to state 54
    relation-expr              go to state 55
    expression                 go to state 56
    var                        go to state 57


State 140

   23 statement: FOR var ASSIGN NUMBER SEMICOLON . bool-expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    NOT      shift, and go to state 44
    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 48
    NUMBER   shift, and go to state 49
    IDENT    shift, and go to state 50

    term                       go to state 51
    multiplicative_expression  go to state 52
    bool-expr                  go to state 146
    relation-and-expr          go to state 54
    relation-expr              go to state 55
    expression                 go to state 56
    var                        go to state 57


State 141

   68 var: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 61
    NUMBER   shift, and go to state 49
    IDENT    shift, and go to state 50

    term                       go to state 51
    multiplicative_expression  go to state 52
    expression                 go to state 147
    var                        go to state 57


State 142

   35 term: SUB IDENT L_PAREN expression_chain R_PAREN .

    $default  reduce using rule 35 (term)


State 143

   62 expression_chain: expression_chain COMMA expression .

    $default  reduce using rule 62 (expression_chain)


State 144

   14 statements: statements . SEMICOLON
   16           | statements . SEMICOLON statement
   20 statement: IF bool-expr THEN statements ELSE statements . ENDIF

    ENDIF      shift, and go to state 148
    SEMICOLON  shift, and go to state 68


State 145

   22 statement: DO BEGINLOOP statements ENDLOOP WHILE bool-expr .

    $default  reduce using rule 22 (statement)


State 146

   23 statement: FOR var ASSIGN NUMBER SEMICOLON bool-expr . SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    SEMICOLON  shift, and go to state 149


State 147

   68 var: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 150


State 148

   20 statement: IF bool-expr THEN statements ELSE statements ENDIF .

    $default  reduce using rule 20 (statement)


State 149

   23 statement: FOR var ASSIGN NUMBER SEMICOLON bool-expr SEMICOLON . var ASSIGN expression BEGINLOOP statements ENDLOOP

    IDENT  shift, and go to state 38

    var  go to state 151


State 150

   68 var: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 68 (var)


State 151

   23 statement: FOR var ASSIGN NUMBER SEMICOLON bool-expr SEMICOLON var . ASSIGN expression BEGINLOOP statements ENDLOOP

    ASSIGN  shift, and go to state 152


State 152

   23 statement: FOR var ASSIGN NUMBER SEMICOLON bool-expr SEMICOLON var ASSIGN . expression BEGINLOOP statements ENDLOOP

    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 61
    NUMBER   shift, and go to state 49
    IDENT    shift, and go to state 50

    term                       go to state 51
    multiplicative_expression  go to state 52
    expression                 go to state 153
    var                        go to state 57


State 153

   23 statement: FOR var ASSIGN NUMBER SEMICOLON bool-expr SEMICOLON var ASSIGN expression . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 154


State 154

   23 statement: FOR var ASSIGN NUMBER SEMICOLON bool-expr SEMICOLON var ASSIGN expression BEGINLOOP . statements ENDLOOP

    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    FOR       shift, and go to state 33
    CONTINUE  shift, and go to state 34
    RETURN    shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    IDENT     shift, and go to state 38

    $default  reduce using rule 15 (statements)

    statements  go to state 155
    statement   go to state 40
    var         go to state 41


State 155

   14 statements: statements . SEMICOLON
   16           | statements . SEMICOLON statement
   23 statement: FOR var ASSIGN NUMBER SEMICOLON bool-expr SEMICOLON var ASSIGN expression BEGINLOOP statements . ENDLOOP

    ENDLOOP    shift, and go to state 156
    SEMICOLON  shift, and go to state 68


State 156

   23 statement: FOR var ASSIGN NUMBER SEMICOLON bool-expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 23 (statement)
