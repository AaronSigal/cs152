Nonterminals useless in grammar

   vars


Terminals unused in grammar

   AND
   OR
   NOT
   TRUE
   FALSE
   IF
   THEN
   ELSE
   ENDIF
   WHILE
   DO
   BEGINLOOP
   ENDLOOP
   FOREACH
   IN
   CONTINUE
   RETURN
   READ
   WRITE
   EQ
   NEQ
   LT
   GT
   LTE
   GTE


Rules useless in grammar

   32 vars: var COMMA vars
   33     | var


Grammar

    0 $accept: program $end

    1 program: functions

    2 functions: %empty
    3          | function functions

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    5 array: R_SQUARE_BRACKET ARRAY L_SQUARE_BRACKET array
    6      | %empty

    7 declarations: declaration SEMICOLON declarations
    8             | %empty

    9 declaration: IDENT COMMA declaration
   10            | IDENT COLON INTEGER
   11            | IDENT COLON array OF INTEGER

   12 statements: statement statements
   13           | %empty

   14 term: var
   15     | NUMBER
   16     | L_PAREN expression R_PAREN
   17     | IDENT L_PAREN expression_chain R_PAREN

   18 multiplicative_expression: term MULT multiplicative_expression
   19                          | term DIV multiplicative_expression
   20                          | term MOD multiplicative_expression
   21                          | term

   22 expression: multiplicative_expression ADD expression
   23           | multiplicative_expression SUB expression
   24           | multiplicative_expression

   25 expressions: R_SQUARE_BRACKET expression L_SQUARE_BRACKET expressions
   26            | %empty

   27 expression_chain: expression COMMA expression_chain
   28                 | expression

   29 var: IDENT
   30    | IDENT R_SQUARE_BRACKET expressions

   31 statement: var ASSIGN expression


Terminals, with rules where they appear

$end (0) 0
error (256)
AND (258)
OR (259)
NOT (260)
TRUE (261)
FALSE (262)
IF (263)
THEN (264)
ELSE (265)
ENDIF (266)
WHILE (267)
DO (268)
BEGINLOOP (269)
ENDLOOP (270)
FOREACH (271)
IN (272)
CONTINUE (273)
FUNCTION (274) 4
RETURN (275)
BEGIN_PARAMS (276) 4
END_PARAMS (277) 4
BEGIN_LOCALS (278) 4
END_LOCALS (279) 4
BEGIN_BODY (280) 4
END_BODY (281) 4
INTEGER (282) 10 11
ARRAY (283) 5
OF (284) 11
READ (285)
WRITE (286)
ADD (287) 22
SUB (288) 23
MULT (289) 18
DIV (290) 19
MOD (291) 20
EQ (292)
ASSIGN (293) 31
NEQ (294)
LT (295)
GT (296)
LTE (297)
GTE (298)
L_PAREN (299) 16 17
R_PAREN (300) 16 17
L_SQUARE_BRACKET (301) 5 25
R_SQUARE_BRACKET (302) 5 25 30
SEMICOLON (303) 4 7
COLON (304) 10 11
COMMA (305) 9 27
NUMBER (306) 15
IDENT (307) 4 9 10 11 17 29 30


Nonterminals, with rules where they appear

$accept (53)
    on left: 0
program (54)
    on left: 1, on right: 0
functions (55)
    on left: 2 3, on right: 1 3
function (56)
    on left: 4, on right: 3
array (57)
    on left: 5 6, on right: 5 11
declarations (58)
    on left: 7 8, on right: 4 7
declaration (59)
    on left: 9 10 11, on right: 7 9
statements (60)
    on left: 12 13, on right: 4 12
term (61)
    on left: 14 15 16 17, on right: 18 19 20 21
multiplicative_expression (62)
    on left: 18 19 20 21, on right: 18 19 20 22 23 24
expression (63)
    on left: 22 23 24, on right: 16 22 23 25 27 28 31
expressions (64)
    on left: 25 26, on right: 25 30
expression_chain (65)
    on left: 27 28, on right: 17 27
var (66)
    on left: 29 30, on right: 14 31
statement (67)
    on left: 31, on right: 12


State 0

    0 $accept: . program $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    program    go to state 2
    functions  go to state 3
    function   go to state 4


State 1

    4 function: FUNCTION . IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 5


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    1 program: functions .

    $default  reduce using rule 1 (program)


State 4

    3 functions: function . functions

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    functions  go to state 7
    function   go to state 4


State 5

    4 function: FUNCTION IDENT . SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    SEMICOLON  shift, and go to state 8


State 6

    0 $accept: program $end .

    $default  accept


State 7

    3 functions: function functions .

    $default  reduce using rule 3 (functions)


State 8

    4 function: FUNCTION IDENT SEMICOLON . BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_PARAMS  shift, and go to state 9


State 9

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS . declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 10

    $default  reduce using rule 8 (declarations)

    declarations  go to state 11
    declaration   go to state 12


State 10

    9 declaration: IDENT . COMMA declaration
   10            | IDENT . COLON INTEGER
   11            | IDENT . COLON array OF INTEGER

    COLON  shift, and go to state 13
    COMMA  shift, and go to state 14


State 11

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations . END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    END_PARAMS  shift, and go to state 15


State 12

    7 declarations: declaration . SEMICOLON declarations

    SEMICOLON  shift, and go to state 16


State 13

   10 declaration: IDENT COLON . INTEGER
   11            | IDENT COLON . array OF INTEGER

    INTEGER           shift, and go to state 17
    R_SQUARE_BRACKET  shift, and go to state 18

    $default  reduce using rule 6 (array)

    array  go to state 19


State 14

    9 declaration: IDENT COMMA . declaration

    IDENT  shift, and go to state 10

    declaration  go to state 20


State 15

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS . BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_LOCALS  shift, and go to state 21


State 16

    7 declarations: declaration SEMICOLON . declarations

    IDENT  shift, and go to state 10

    $default  reduce using rule 8 (declarations)

    declarations  go to state 22
    declaration   go to state 12


State 17

   10 declaration: IDENT COLON INTEGER .

    $default  reduce using rule 10 (declaration)


State 18

    5 array: R_SQUARE_BRACKET . ARRAY L_SQUARE_BRACKET array

    ARRAY  shift, and go to state 23


State 19

   11 declaration: IDENT COLON array . OF INTEGER

    OF  shift, and go to state 24


State 20

    9 declaration: IDENT COMMA declaration .

    $default  reduce using rule 9 (declaration)


State 21

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS . declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 10

    $default  reduce using rule 8 (declarations)

    declarations  go to state 25
    declaration   go to state 12


State 22

    7 declarations: declaration SEMICOLON declarations .

    $default  reduce using rule 7 (declarations)


State 23

    5 array: R_SQUARE_BRACKET ARRAY . L_SQUARE_BRACKET array

    L_SQUARE_BRACKET  shift, and go to state 26


State 24

   11 declaration: IDENT COLON array OF . INTEGER

    INTEGER  shift, and go to state 27


State 25

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations . END_LOCALS BEGIN_BODY statements END_BODY

    END_LOCALS  shift, and go to state 28


State 26

    5 array: R_SQUARE_BRACKET ARRAY L_SQUARE_BRACKET . array

    R_SQUARE_BRACKET  shift, and go to state 18

    $default  reduce using rule 6 (array)

    array  go to state 29


State 27

   11 declaration: IDENT COLON array OF INTEGER .

    $default  reduce using rule 11 (declaration)


State 28

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS . BEGIN_BODY statements END_BODY

    BEGIN_BODY  shift, and go to state 30


State 29

    5 array: R_SQUARE_BRACKET ARRAY L_SQUARE_BRACKET array .

    $default  reduce using rule 5 (array)


State 30

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY . statements END_BODY

    IDENT  shift, and go to state 31

    $default  reduce using rule 13 (statements)

    statements  go to state 32
    var         go to state 33
    statement   go to state 34


State 31

   29 var: IDENT .
   30    | IDENT . R_SQUARE_BRACKET expressions

    R_SQUARE_BRACKET  shift, and go to state 35

    $default  reduce using rule 29 (var)


State 32

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements . END_BODY

    END_BODY  shift, and go to state 36


State 33

   31 statement: var . ASSIGN expression

    ASSIGN  shift, and go to state 37


State 34

   12 statements: statement . statements

    IDENT  shift, and go to state 31

    $default  reduce using rule 13 (statements)

    statements  go to state 38
    var         go to state 33
    statement   go to state 34


State 35

   30 var: IDENT R_SQUARE_BRACKET . expressions

    R_SQUARE_BRACKET  shift, and go to state 39

    $default  reduce using rule 26 (expressions)

    expressions  go to state 40


State 36

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY .

    $default  reduce using rule 4 (function)


State 37

   31 statement: var ASSIGN . expression

    L_PAREN  shift, and go to state 41
    NUMBER   shift, and go to state 42
    IDENT    shift, and go to state 43

    term                       go to state 44
    multiplicative_expression  go to state 45
    expression                 go to state 46
    var                        go to state 47


State 38

   12 statements: statement statements .

    $default  reduce using rule 12 (statements)


State 39

   25 expressions: R_SQUARE_BRACKET . expression L_SQUARE_BRACKET expressions

    L_PAREN  shift, and go to state 41
    NUMBER   shift, and go to state 42
    IDENT    shift, and go to state 43

    term                       go to state 44
    multiplicative_expression  go to state 45
    expression                 go to state 48
    var                        go to state 47


State 40

   30 var: IDENT R_SQUARE_BRACKET expressions .

    $default  reduce using rule 30 (var)


State 41

   16 term: L_PAREN . expression R_PAREN

    L_PAREN  shift, and go to state 41
    NUMBER   shift, and go to state 42
    IDENT    shift, and go to state 43

    term                       go to state 44
    multiplicative_expression  go to state 45
    expression                 go to state 49
    var                        go to state 47


State 42

   15 term: NUMBER .

    $default  reduce using rule 15 (term)


State 43

   17 term: IDENT . L_PAREN expression_chain R_PAREN
   29 var: IDENT .
   30    | IDENT . R_SQUARE_BRACKET expressions

    L_PAREN           shift, and go to state 50
    R_SQUARE_BRACKET  shift, and go to state 35

    $default  reduce using rule 29 (var)


State 44

   18 multiplicative_expression: term . MULT multiplicative_expression
   19                          | term . DIV multiplicative_expression
   20                          | term . MOD multiplicative_expression
   21                          | term .

    MULT  shift, and go to state 51
    DIV   shift, and go to state 52
    MOD   shift, and go to state 53

    $default  reduce using rule 21 (multiplicative_expression)


State 45

   22 expression: multiplicative_expression . ADD expression
   23           | multiplicative_expression . SUB expression
   24           | multiplicative_expression .

    ADD  shift, and go to state 54
    SUB  shift, and go to state 55

    $default  reduce using rule 24 (expression)


State 46

   31 statement: var ASSIGN expression .

    $default  reduce using rule 31 (statement)


State 47

   14 term: var .

    $default  reduce using rule 14 (term)


State 48

   25 expressions: R_SQUARE_BRACKET expression . L_SQUARE_BRACKET expressions

    L_SQUARE_BRACKET  shift, and go to state 56


State 49

   16 term: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 57


State 50

   17 term: IDENT L_PAREN . expression_chain R_PAREN

    L_PAREN  shift, and go to state 41
    NUMBER   shift, and go to state 42
    IDENT    shift, and go to state 43

    term                       go to state 44
    multiplicative_expression  go to state 45
    expression                 go to state 58
    expression_chain           go to state 59
    var                        go to state 47


State 51

   18 multiplicative_expression: term MULT . multiplicative_expression

    L_PAREN  shift, and go to state 41
    NUMBER   shift, and go to state 42
    IDENT    shift, and go to state 43

    term                       go to state 44
    multiplicative_expression  go to state 60
    var                        go to state 47


State 52

   19 multiplicative_expression: term DIV . multiplicative_expression

    L_PAREN  shift, and go to state 41
    NUMBER   shift, and go to state 42
    IDENT    shift, and go to state 43

    term                       go to state 44
    multiplicative_expression  go to state 61
    var                        go to state 47


State 53

   20 multiplicative_expression: term MOD . multiplicative_expression

    L_PAREN  shift, and go to state 41
    NUMBER   shift, and go to state 42
    IDENT    shift, and go to state 43

    term                       go to state 44
    multiplicative_expression  go to state 62
    var                        go to state 47


State 54

   22 expression: multiplicative_expression ADD . expression

    L_PAREN  shift, and go to state 41
    NUMBER   shift, and go to state 42
    IDENT    shift, and go to state 43

    term                       go to state 44
    multiplicative_expression  go to state 45
    expression                 go to state 63
    var                        go to state 47


State 55

   23 expression: multiplicative_expression SUB . expression

    L_PAREN  shift, and go to state 41
    NUMBER   shift, and go to state 42
    IDENT    shift, and go to state 43

    term                       go to state 44
    multiplicative_expression  go to state 45
    expression                 go to state 64
    var                        go to state 47


State 56

   25 expressions: R_SQUARE_BRACKET expression L_SQUARE_BRACKET . expressions

    R_SQUARE_BRACKET  shift, and go to state 39

    $default  reduce using rule 26 (expressions)

    expressions  go to state 65


State 57

   16 term: L_PAREN expression R_PAREN .

    $default  reduce using rule 16 (term)


State 58

   27 expression_chain: expression . COMMA expression_chain
   28                 | expression .

    COMMA  shift, and go to state 66

    $default  reduce using rule 28 (expression_chain)


State 59

   17 term: IDENT L_PAREN expression_chain . R_PAREN

    R_PAREN  shift, and go to state 67


State 60

   18 multiplicative_expression: term MULT multiplicative_expression .

    $default  reduce using rule 18 (multiplicative_expression)


State 61

   19 multiplicative_expression: term DIV multiplicative_expression .

    $default  reduce using rule 19 (multiplicative_expression)


State 62

   20 multiplicative_expression: term MOD multiplicative_expression .

    $default  reduce using rule 20 (multiplicative_expression)


State 63

   22 expression: multiplicative_expression ADD expression .

    $default  reduce using rule 22 (expression)


State 64

   23 expression: multiplicative_expression SUB expression .

    $default  reduce using rule 23 (expression)


State 65

   25 expressions: R_SQUARE_BRACKET expression L_SQUARE_BRACKET expressions .

    $default  reduce using rule 25 (expressions)


State 66

   27 expression_chain: expression COMMA . expression_chain

    L_PAREN  shift, and go to state 41
    NUMBER   shift, and go to state 42
    IDENT    shift, and go to state 43

    term                       go to state 44
    multiplicative_expression  go to state 45
    expression                 go to state 58
    expression_chain           go to state 68
    var                        go to state 47


State 67

   17 term: IDENT L_PAREN expression_chain R_PAREN .

    $default  reduce using rule 17 (term)


State 68

   27 expression_chain: expression COMMA expression_chain .

    $default  reduce using rule 27 (expression_chain)
