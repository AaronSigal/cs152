Terminals unused in grammar

   FOREACH
   IN


Grammar

    0 $accept: program $end

    1 program: functions

    2 functions: %empty
    3          | function functions

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    5 declarations: declaration SEMICOLON declarations
    6             | %empty

    7 declaration: IDENT COMMA declaration
    8            | IDENT COLON INTEGER
    9            | IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   10            | IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

   11 statements: statement SEMICOLON statements
   12           | %empty

   13 statement: var ASSIGN expression
   14          | IF bool-expr THEN statements ENDIF
   15          | IF bool-expr THEN statements ELSE statements ENDIF
   16          | WHILE bool-expr BEGINLOOP statements ENDLOOP
   17          | DO BEGINLOOP statements ENDLOOP WHILE bool-expr
   18          | FOR var ASSIGN NUMBER SEMICOLON bool-expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP
   19          | READ vars
   20          | WRITE vars
   21          | CONTINUE
   22          | RETURN expression

   23 term: var
   24     | NUMBER
   25     | L_PAREN expression R_PAREN
   26     | IDENT L_PAREN expression_chain R_PAREN

   27 multiplicative_expression: term MULT multiplicative_expression
   28                          | term DIV multiplicative_expression
   29                          | term MOD multiplicative_expression
   30                          | term

   31 bool-expr: relation-and-expr OR bool-expr
   32          | relation-and-expr

   33 relation-and-expr: relation-expr AND relation-and-expr
   34                  | relation-expr

   35 relation-expr: expression comp expression
   36              | NOT expression comp expression
   37              | TRUE
   38              | FALSE
   39              | NOT TRUE
   40              | NOT FALSE
   41              | L_PAREN bool-expr R_PAREN
   42              | NOT L_PAREN bool-expr R_PAREN

   43 comp: EQ
   44     | NEQ
   45     | LT
   46     | GT
   47     | LTE
   48     | GTE

   49 expression: multiplicative_expression ADD expression
   50           | multiplicative_expression SUB expression
   51           | multiplicative_expression

   52 expressions: R_SQUARE_BRACKET expression L_SQUARE_BRACKET expressions
   53            | %empty

   54 expression_chain: expression COMMA expression_chain
   55                 | expression

   56 vars: var COMMA vars
   57     | var

   58 var: IDENT
   59    | IDENT R_SQUARE_BRACKET expressions L_SQUARE_BRACKET
   60    | IDENT R_SQUARE_BRACKET expressions L_SQUARE_BRACKET R_SQUARE_BRACKET expressions L_SQUARE_BRACKET


Terminals, with rules where they appear

$end (0) 0
error (256)
AND (258) 33
OR (259) 31
NOT (260) 36 39 40 42
TRUE (261) 37 39
FALSE (262) 38 40
IF (263) 14 15
THEN (264) 14 15
ELSE (265) 15
ENDIF (266) 14 15
WHILE (267) 16 17
DO (268) 17
BEGINLOOP (269) 16 17 18
ENDLOOP (270) 16 17 18
FOR (271) 18
FOREACH (272)
IN (273)
CONTINUE (274) 21
FUNCTION (275) 4
RETURN (276) 22
BEGIN_PARAMS (277) 4
END_PARAMS (278) 4
BEGIN_LOCALS (279) 4
END_LOCALS (280) 4
BEGIN_BODY (281) 4
END_BODY (282) 4
INTEGER (283) 8 9 10
ARRAY (284) 9 10
OF (285) 9 10
READ (286) 19
WRITE (287) 20
ADD (288) 49
SUB (289) 50
MULT (290) 27
DIV (291) 28
MOD (292) 29
EQ (293) 43
ASSIGN (294) 13 18
NEQ (295) 44
LT (296) 45
GT (297) 46
LTE (298) 47
GTE (299) 48
L_PAREN (300) 25 26 41 42
R_PAREN (301) 25 26 41 42
L_SQUARE_BRACKET (302) 9 10 52 59 60
R_SQUARE_BRACKET (303) 9 10 52 59 60
SEMICOLON (304) 4 5 11 18
COLON (305) 8 9 10
COMMA (306) 7 54 56
NUMBER (307) 9 10 18 24
IDENT (308) 4 7 8 9 10 26 58 59 60


Nonterminals, with rules where they appear

$accept (54)
    on left: 0
program (55)
    on left: 1, on right: 0
functions (56)
    on left: 2 3, on right: 1 3
function (57)
    on left: 4, on right: 3
declarations (58)
    on left: 5 6, on right: 4 5
declaration (59)
    on left: 7 8 9 10, on right: 5 7
statements (60)
    on left: 11 12, on right: 4 11 14 15 16 17 18
statement (61)
    on left: 13 14 15 16 17 18 19 20 21 22, on right: 11
term (62)
    on left: 23 24 25 26, on right: 27 28 29 30
multiplicative_expression (63)
    on left: 27 28 29 30, on right: 27 28 29 49 50 51
bool-expr (64)
    on left: 31 32, on right: 14 15 16 17 18 31 41 42
relation-and-expr (65)
    on left: 33 34, on right: 31 32 33
relation-expr (66)
    on left: 35 36 37 38 39 40 41 42, on right: 33 34
comp (67)
    on left: 43 44 45 46 47 48, on right: 35 36
expression (68)
    on left: 49 50 51, on right: 13 18 22 25 35 36 49 50 52 54 55
expressions (69)
    on left: 52 53, on right: 52 59 60
expression_chain (70)
    on left: 54 55, on right: 26 54
vars (71)
    on left: 56 57, on right: 19 20 56
var (72)
    on left: 58 59 60, on right: 13 18 23 56 57


State 0

    0 $accept: . program $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    program    go to state 2
    functions  go to state 3
    function   go to state 4


State 1

    4 function: FUNCTION . IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 5


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    1 program: functions .

    $default  reduce using rule 1 (program)


State 4

    3 functions: function . functions

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    functions  go to state 7
    function   go to state 4


State 5

    4 function: FUNCTION IDENT . SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    SEMICOLON  shift, and go to state 8


State 6

    0 $accept: program $end .

    $default  accept


State 7

    3 functions: function functions .

    $default  reduce using rule 3 (functions)


State 8

    4 function: FUNCTION IDENT SEMICOLON . BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_PARAMS  shift, and go to state 9


State 9

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS . declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 10

    $default  reduce using rule 6 (declarations)

    declarations  go to state 11
    declaration   go to state 12


State 10

    7 declaration: IDENT . COMMA declaration
    8            | IDENT . COLON INTEGER
    9            | IDENT . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   10            | IDENT . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    COLON  shift, and go to state 13
    COMMA  shift, and go to state 14


State 11

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations . END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    END_PARAMS  shift, and go to state 15


State 12

    5 declarations: declaration . SEMICOLON declarations

    SEMICOLON  shift, and go to state 16


State 13

    8 declaration: IDENT COLON . INTEGER
    9            | IDENT COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   10            | IDENT COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    INTEGER  shift, and go to state 17
    ARRAY    shift, and go to state 18


State 14

    7 declaration: IDENT COMMA . declaration

    IDENT  shift, and go to state 10

    declaration  go to state 19


State 15

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS . BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_LOCALS  shift, and go to state 20


State 16

    5 declarations: declaration SEMICOLON . declarations

    IDENT  shift, and go to state 10

    $default  reduce using rule 6 (declarations)

    declarations  go to state 21
    declaration   go to state 12


State 17

    8 declaration: IDENT COLON INTEGER .

    $default  reduce using rule 8 (declaration)


State 18

    9 declaration: IDENT COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   10            | IDENT COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 22


State 19

    7 declaration: IDENT COMMA declaration .

    $default  reduce using rule 7 (declaration)


State 20

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS . declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 10

    $default  reduce using rule 6 (declarations)

    declarations  go to state 23
    declaration   go to state 12


State 21

    5 declarations: declaration SEMICOLON declarations .

    $default  reduce using rule 5 (declarations)


State 22

    9 declaration: IDENT COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER
   10            | IDENT COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 24


State 23

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations . END_LOCALS BEGIN_BODY statements END_BODY

    END_LOCALS  shift, and go to state 25


State 24

    9 declaration: IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER
   10            | IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 26


State 25

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS . BEGIN_BODY statements END_BODY

    BEGIN_BODY  shift, and go to state 27


State 26

    9 declaration: IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER
   10            | IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    OF                shift, and go to state 28
    L_SQUARE_BRACKET  shift, and go to state 29


State 27

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY . statements END_BODY

    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    FOR       shift, and go to state 33
    CONTINUE  shift, and go to state 34
    RETURN    shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    IDENT     shift, and go to state 38

    $default  reduce using rule 12 (statements)

    statements  go to state 39
    statement   go to state 40
    var         go to state 41


State 28

    9 declaration: IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 42


State 29

   10 declaration: IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 43


State 30

   14 statement: IF . bool-expr THEN statements ENDIF
   15          | IF . bool-expr THEN statements ELSE statements ENDIF

    NOT      shift, and go to state 44
    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46
    L_PAREN  shift, and go to state 47
    NUMBER   shift, and go to state 48
    IDENT    shift, and go to state 49

    term                       go to state 50
    multiplicative_expression  go to state 51
    bool-expr                  go to state 52
    relation-and-expr          go to state 53
    relation-expr              go to state 54
    expression                 go to state 55
    var                        go to state 56


State 31

   16 statement: WHILE . bool-expr BEGINLOOP statements ENDLOOP

    NOT      shift, and go to state 44
    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46
    L_PAREN  shift, and go to state 47
    NUMBER   shift, and go to state 48
    IDENT    shift, and go to state 49

    term                       go to state 50
    multiplicative_expression  go to state 51
    bool-expr                  go to state 57
    relation-and-expr          go to state 53
    relation-expr              go to state 54
    expression                 go to state 55
    var                        go to state 56


State 32

   17 statement: DO . BEGINLOOP statements ENDLOOP WHILE bool-expr

    BEGINLOOP  shift, and go to state 58


State 33

   18 statement: FOR . var ASSIGN NUMBER SEMICOLON bool-expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    IDENT  shift, and go to state 38

    var  go to state 59


State 34

   21 statement: CONTINUE .

    $default  reduce using rule 21 (statement)


State 35

   22 statement: RETURN . expression

    L_PAREN  shift, and go to state 60
    NUMBER   shift, and go to state 48
    IDENT    shift, and go to state 49

    term                       go to state 50
    multiplicative_expression  go to state 51
    expression                 go to state 61
    var                        go to state 56


State 36

   19 statement: READ . vars

    IDENT  shift, and go to state 38

    vars  go to state 62
    var   go to state 63


State 37

   20 statement: WRITE . vars

    IDENT  shift, and go to state 38

    vars  go to state 64
    var   go to state 63


State 38

   58 var: IDENT .
   59    | IDENT . R_SQUARE_BRACKET expressions L_SQUARE_BRACKET
   60    | IDENT . R_SQUARE_BRACKET expressions L_SQUARE_BRACKET R_SQUARE_BRACKET expressions L_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 65

    $default  reduce using rule 58 (var)


State 39

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements . END_BODY

    END_BODY  shift, and go to state 66


State 40

   11 statements: statement . SEMICOLON statements

    SEMICOLON  shift, and go to state 67


State 41

   13 statement: var . ASSIGN expression

    ASSIGN  shift, and go to state 68


State 42

    9 declaration: IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 9 (declaration)


State 43

   10 declaration: IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 69


State 44

   36 relation-expr: NOT . expression comp expression
   39              | NOT . TRUE
   40              | NOT . FALSE
   42              | NOT . L_PAREN bool-expr R_PAREN

    TRUE     shift, and go to state 70
    FALSE    shift, and go to state 71
    L_PAREN  shift, and go to state 72
    NUMBER   shift, and go to state 48
    IDENT    shift, and go to state 49

    term                       go to state 50
    multiplicative_expression  go to state 51
    expression                 go to state 73
    var                        go to state 56


State 45

   37 relation-expr: TRUE .

    $default  reduce using rule 37 (relation-expr)


State 46

   38 relation-expr: FALSE .

    $default  reduce using rule 38 (relation-expr)


State 47

   25 term: L_PAREN . expression R_PAREN
   41 relation-expr: L_PAREN . bool-expr R_PAREN

    NOT      shift, and go to state 44
    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46
    L_PAREN  shift, and go to state 47
    NUMBER   shift, and go to state 48
    IDENT    shift, and go to state 49

    term                       go to state 50
    multiplicative_expression  go to state 51
    bool-expr                  go to state 74
    relation-and-expr          go to state 53
    relation-expr              go to state 54
    expression                 go to state 75
    var                        go to state 56


State 48

   24 term: NUMBER .

    $default  reduce using rule 24 (term)


State 49

   26 term: IDENT . L_PAREN expression_chain R_PAREN
   58 var: IDENT .
   59    | IDENT . R_SQUARE_BRACKET expressions L_SQUARE_BRACKET
   60    | IDENT . R_SQUARE_BRACKET expressions L_SQUARE_BRACKET R_SQUARE_BRACKET expressions L_SQUARE_BRACKET

    L_PAREN           shift, and go to state 76
    R_SQUARE_BRACKET  shift, and go to state 65

    $default  reduce using rule 58 (var)


State 50

   27 multiplicative_expression: term . MULT multiplicative_expression
   28                          | term . DIV multiplicative_expression
   29                          | term . MOD multiplicative_expression
   30                          | term .

    MULT  shift, and go to state 77
    DIV   shift, and go to state 78
    MOD   shift, and go to state 79

    $default  reduce using rule 30 (multiplicative_expression)


State 51

   49 expression: multiplicative_expression . ADD expression
   50           | multiplicative_expression . SUB expression
   51           | multiplicative_expression .

    ADD  shift, and go to state 80
    SUB  shift, and go to state 81

    $default  reduce using rule 51 (expression)


State 52

   14 statement: IF bool-expr . THEN statements ENDIF
   15          | IF bool-expr . THEN statements ELSE statements ENDIF

    THEN  shift, and go to state 82


State 53

   31 bool-expr: relation-and-expr . OR bool-expr
   32          | relation-and-expr .

    OR  shift, and go to state 83

    $default  reduce using rule 32 (bool-expr)


State 54

   33 relation-and-expr: relation-expr . AND relation-and-expr
   34                  | relation-expr .

    AND  shift, and go to state 84

    $default  reduce using rule 34 (relation-and-expr)


State 55

   35 relation-expr: expression . comp expression

    EQ   shift, and go to state 85
    NEQ  shift, and go to state 86
    LT   shift, and go to state 87
    GT   shift, and go to state 88
    LTE  shift, and go to state 89
    GTE  shift, and go to state 90

    comp  go to state 91


State 56

   23 term: var .

    $default  reduce using rule 23 (term)


State 57

   16 statement: WHILE bool-expr . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 92


State 58

   17 statement: DO BEGINLOOP . statements ENDLOOP WHILE bool-expr

    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    FOR       shift, and go to state 33
    CONTINUE  shift, and go to state 34
    RETURN    shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    IDENT     shift, and go to state 38

    $default  reduce using rule 12 (statements)

    statements  go to state 93
    statement   go to state 40
    var         go to state 41


State 59

   18 statement: FOR var . ASSIGN NUMBER SEMICOLON bool-expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    ASSIGN  shift, and go to state 94


State 60

   25 term: L_PAREN . expression R_PAREN

    L_PAREN  shift, and go to state 60
    NUMBER   shift, and go to state 48
    IDENT    shift, and go to state 49

    term                       go to state 50
    multiplicative_expression  go to state 51
    expression                 go to state 95
    var                        go to state 56


State 61

   22 statement: RETURN expression .

    $default  reduce using rule 22 (statement)


State 62

   19 statement: READ vars .

    $default  reduce using rule 19 (statement)


State 63

   56 vars: var . COMMA vars
   57     | var .

    COMMA  shift, and go to state 96

    $default  reduce using rule 57 (vars)


State 64

   20 statement: WRITE vars .

    $default  reduce using rule 20 (statement)


State 65

   59 var: IDENT R_SQUARE_BRACKET . expressions L_SQUARE_BRACKET
   60    | IDENT R_SQUARE_BRACKET . expressions L_SQUARE_BRACKET R_SQUARE_BRACKET expressions L_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 97

    $default  reduce using rule 53 (expressions)

    expressions  go to state 98


State 66

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY .

    $default  reduce using rule 4 (function)


State 67

   11 statements: statement SEMICOLON . statements

    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    FOR       shift, and go to state 33
    CONTINUE  shift, and go to state 34
    RETURN    shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    IDENT     shift, and go to state 38

    $default  reduce using rule 12 (statements)

    statements  go to state 99
    statement   go to state 40
    var         go to state 41


State 68

   13 statement: var ASSIGN . expression

    L_PAREN  shift, and go to state 60
    NUMBER   shift, and go to state 48
    IDENT    shift, and go to state 49

    term                       go to state 50
    multiplicative_expression  go to state 51
    expression                 go to state 100
    var                        go to state 56


State 69

   10 declaration: IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 101


State 70

   39 relation-expr: NOT TRUE .

    $default  reduce using rule 39 (relation-expr)


State 71

   40 relation-expr: NOT FALSE .

    $default  reduce using rule 40 (relation-expr)


State 72

   25 term: L_PAREN . expression R_PAREN
   42 relation-expr: NOT L_PAREN . bool-expr R_PAREN

    NOT      shift, and go to state 44
    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46
    L_PAREN  shift, and go to state 47
    NUMBER   shift, and go to state 48
    IDENT    shift, and go to state 49

    term                       go to state 50
    multiplicative_expression  go to state 51
    bool-expr                  go to state 102
    relation-and-expr          go to state 53
    relation-expr              go to state 54
    expression                 go to state 75
    var                        go to state 56


State 73

   36 relation-expr: NOT expression . comp expression

    EQ   shift, and go to state 85
    NEQ  shift, and go to state 86
    LT   shift, and go to state 87
    GT   shift, and go to state 88
    LTE  shift, and go to state 89
    GTE  shift, and go to state 90

    comp  go to state 103


State 74

   41 relation-expr: L_PAREN bool-expr . R_PAREN

    R_PAREN  shift, and go to state 104


State 75

   25 term: L_PAREN expression . R_PAREN
   35 relation-expr: expression . comp expression

    EQ       shift, and go to state 85
    NEQ      shift, and go to state 86
    LT       shift, and go to state 87
    GT       shift, and go to state 88
    LTE      shift, and go to state 89
    GTE      shift, and go to state 90
    R_PAREN  shift, and go to state 105

    comp  go to state 91


State 76

   26 term: IDENT L_PAREN . expression_chain R_PAREN

    L_PAREN  shift, and go to state 60
    NUMBER   shift, and go to state 48
    IDENT    shift, and go to state 49

    term                       go to state 50
    multiplicative_expression  go to state 51
    expression                 go to state 106
    expression_chain           go to state 107
    var                        go to state 56


State 77

   27 multiplicative_expression: term MULT . multiplicative_expression

    L_PAREN  shift, and go to state 60
    NUMBER   shift, and go to state 48
    IDENT    shift, and go to state 49

    term                       go to state 50
    multiplicative_expression  go to state 108
    var                        go to state 56


State 78

   28 multiplicative_expression: term DIV . multiplicative_expression

    L_PAREN  shift, and go to state 60
    NUMBER   shift, and go to state 48
    IDENT    shift, and go to state 49

    term                       go to state 50
    multiplicative_expression  go to state 109
    var                        go to state 56


State 79

   29 multiplicative_expression: term MOD . multiplicative_expression

    L_PAREN  shift, and go to state 60
    NUMBER   shift, and go to state 48
    IDENT    shift, and go to state 49

    term                       go to state 50
    multiplicative_expression  go to state 110
    var                        go to state 56


State 80

   49 expression: multiplicative_expression ADD . expression

    L_PAREN  shift, and go to state 60
    NUMBER   shift, and go to state 48
    IDENT    shift, and go to state 49

    term                       go to state 50
    multiplicative_expression  go to state 51
    expression                 go to state 111
    var                        go to state 56


State 81

   50 expression: multiplicative_expression SUB . expression

    L_PAREN  shift, and go to state 60
    NUMBER   shift, and go to state 48
    IDENT    shift, and go to state 49

    term                       go to state 50
    multiplicative_expression  go to state 51
    expression                 go to state 112
    var                        go to state 56


State 82

   14 statement: IF bool-expr THEN . statements ENDIF
   15          | IF bool-expr THEN . statements ELSE statements ENDIF

    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    FOR       shift, and go to state 33
    CONTINUE  shift, and go to state 34
    RETURN    shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    IDENT     shift, and go to state 38

    $default  reduce using rule 12 (statements)

    statements  go to state 113
    statement   go to state 40
    var         go to state 41


State 83

   31 bool-expr: relation-and-expr OR . bool-expr

    NOT      shift, and go to state 44
    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46
    L_PAREN  shift, and go to state 47
    NUMBER   shift, and go to state 48
    IDENT    shift, and go to state 49

    term                       go to state 50
    multiplicative_expression  go to state 51
    bool-expr                  go to state 114
    relation-and-expr          go to state 53
    relation-expr              go to state 54
    expression                 go to state 55
    var                        go to state 56


State 84

   33 relation-and-expr: relation-expr AND . relation-and-expr

    NOT      shift, and go to state 44
    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46
    L_PAREN  shift, and go to state 47
    NUMBER   shift, and go to state 48
    IDENT    shift, and go to state 49

    term                       go to state 50
    multiplicative_expression  go to state 51
    relation-and-expr          go to state 115
    relation-expr              go to state 54
    expression                 go to state 55
    var                        go to state 56


State 85

   43 comp: EQ .

    $default  reduce using rule 43 (comp)


State 86

   44 comp: NEQ .

    $default  reduce using rule 44 (comp)


State 87

   45 comp: LT .

    $default  reduce using rule 45 (comp)


State 88

   46 comp: GT .

    $default  reduce using rule 46 (comp)


State 89

   47 comp: LTE .

    $default  reduce using rule 47 (comp)


State 90

   48 comp: GTE .

    $default  reduce using rule 48 (comp)


State 91

   35 relation-expr: expression comp . expression

    L_PAREN  shift, and go to state 60
    NUMBER   shift, and go to state 48
    IDENT    shift, and go to state 49

    term                       go to state 50
    multiplicative_expression  go to state 51
    expression                 go to state 116
    var                        go to state 56


State 92

   16 statement: WHILE bool-expr BEGINLOOP . statements ENDLOOP

    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    FOR       shift, and go to state 33
    CONTINUE  shift, and go to state 34
    RETURN    shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    IDENT     shift, and go to state 38

    $default  reduce using rule 12 (statements)

    statements  go to state 117
    statement   go to state 40
    var         go to state 41


State 93

   17 statement: DO BEGINLOOP statements . ENDLOOP WHILE bool-expr

    ENDLOOP  shift, and go to state 118


State 94

   18 statement: FOR var ASSIGN . NUMBER SEMICOLON bool-expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    NUMBER  shift, and go to state 119


State 95

   25 term: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 105


State 96

   56 vars: var COMMA . vars

    IDENT  shift, and go to state 38

    vars  go to state 120
    var   go to state 63


State 97

   52 expressions: R_SQUARE_BRACKET . expression L_SQUARE_BRACKET expressions

    L_PAREN  shift, and go to state 60
    NUMBER   shift, and go to state 48
    IDENT    shift, and go to state 49

    term                       go to state 50
    multiplicative_expression  go to state 51
    expression                 go to state 121
    var                        go to state 56


State 98

   59 var: IDENT R_SQUARE_BRACKET expressions . L_SQUARE_BRACKET
   60    | IDENT R_SQUARE_BRACKET expressions . L_SQUARE_BRACKET R_SQUARE_BRACKET expressions L_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 122


State 99

   11 statements: statement SEMICOLON statements .

    $default  reduce using rule 11 (statements)


State 100

   13 statement: var ASSIGN expression .

    $default  reduce using rule 13 (statement)


State 101

   10 declaration: IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 123


State 102

   42 relation-expr: NOT L_PAREN bool-expr . R_PAREN

    R_PAREN  shift, and go to state 124


State 103

   36 relation-expr: NOT expression comp . expression

    L_PAREN  shift, and go to state 60
    NUMBER   shift, and go to state 48
    IDENT    shift, and go to state 49

    term                       go to state 50
    multiplicative_expression  go to state 51
    expression                 go to state 125
    var                        go to state 56


State 104

   41 relation-expr: L_PAREN bool-expr R_PAREN .

    $default  reduce using rule 41 (relation-expr)


State 105

   25 term: L_PAREN expression R_PAREN .

    $default  reduce using rule 25 (term)


State 106

   54 expression_chain: expression . COMMA expression_chain
   55                 | expression .

    COMMA  shift, and go to state 126

    $default  reduce using rule 55 (expression_chain)


State 107

   26 term: IDENT L_PAREN expression_chain . R_PAREN

    R_PAREN  shift, and go to state 127


State 108

   27 multiplicative_expression: term MULT multiplicative_expression .

    $default  reduce using rule 27 (multiplicative_expression)


State 109

   28 multiplicative_expression: term DIV multiplicative_expression .

    $default  reduce using rule 28 (multiplicative_expression)


State 110

   29 multiplicative_expression: term MOD multiplicative_expression .

    $default  reduce using rule 29 (multiplicative_expression)


State 111

   49 expression: multiplicative_expression ADD expression .

    $default  reduce using rule 49 (expression)


State 112

   50 expression: multiplicative_expression SUB expression .

    $default  reduce using rule 50 (expression)


State 113

   14 statement: IF bool-expr THEN statements . ENDIF
   15          | IF bool-expr THEN statements . ELSE statements ENDIF

    ELSE   shift, and go to state 128
    ENDIF  shift, and go to state 129


State 114

   31 bool-expr: relation-and-expr OR bool-expr .

    $default  reduce using rule 31 (bool-expr)


State 115

   33 relation-and-expr: relation-expr AND relation-and-expr .

    $default  reduce using rule 33 (relation-and-expr)


State 116

   35 relation-expr: expression comp expression .

    $default  reduce using rule 35 (relation-expr)


State 117

   16 statement: WHILE bool-expr BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 130


State 118

   17 statement: DO BEGINLOOP statements ENDLOOP . WHILE bool-expr

    WHILE  shift, and go to state 131


State 119

   18 statement: FOR var ASSIGN NUMBER . SEMICOLON bool-expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    SEMICOLON  shift, and go to state 132


State 120

   56 vars: var COMMA vars .

    $default  reduce using rule 56 (vars)


State 121

   52 expressions: R_SQUARE_BRACKET expression . L_SQUARE_BRACKET expressions

    L_SQUARE_BRACKET  shift, and go to state 133


State 122

   59 var: IDENT R_SQUARE_BRACKET expressions L_SQUARE_BRACKET .
   60    | IDENT R_SQUARE_BRACKET expressions L_SQUARE_BRACKET . R_SQUARE_BRACKET expressions L_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 134

    $default  reduce using rule 59 (var)


State 123

   10 declaration: IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 10 (declaration)


State 124

   42 relation-expr: NOT L_PAREN bool-expr R_PAREN .

    $default  reduce using rule 42 (relation-expr)


State 125

   36 relation-expr: NOT expression comp expression .

    $default  reduce using rule 36 (relation-expr)


State 126

   54 expression_chain: expression COMMA . expression_chain

    L_PAREN  shift, and go to state 60
    NUMBER   shift, and go to state 48
    IDENT    shift, and go to state 49

    term                       go to state 50
    multiplicative_expression  go to state 51
    expression                 go to state 106
    expression_chain           go to state 135
    var                        go to state 56


State 127

   26 term: IDENT L_PAREN expression_chain R_PAREN .

    $default  reduce using rule 26 (term)


State 128

   15 statement: IF bool-expr THEN statements ELSE . statements ENDIF

    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    FOR       shift, and go to state 33
    CONTINUE  shift, and go to state 34
    RETURN    shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    IDENT     shift, and go to state 38

    $default  reduce using rule 12 (statements)

    statements  go to state 136
    statement   go to state 40
    var         go to state 41


State 129

   14 statement: IF bool-expr THEN statements ENDIF .

    $default  reduce using rule 14 (statement)


State 130

   16 statement: WHILE bool-expr BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 16 (statement)


State 131

   17 statement: DO BEGINLOOP statements ENDLOOP WHILE . bool-expr

    NOT      shift, and go to state 44
    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46
    L_PAREN  shift, and go to state 47
    NUMBER   shift, and go to state 48
    IDENT    shift, and go to state 49

    term                       go to state 50
    multiplicative_expression  go to state 51
    bool-expr                  go to state 137
    relation-and-expr          go to state 53
    relation-expr              go to state 54
    expression                 go to state 55
    var                        go to state 56


State 132

   18 statement: FOR var ASSIGN NUMBER SEMICOLON . bool-expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    NOT      shift, and go to state 44
    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46
    L_PAREN  shift, and go to state 47
    NUMBER   shift, and go to state 48
    IDENT    shift, and go to state 49

    term                       go to state 50
    multiplicative_expression  go to state 51
    bool-expr                  go to state 138
    relation-and-expr          go to state 53
    relation-expr              go to state 54
    expression                 go to state 55
    var                        go to state 56


State 133

   52 expressions: R_SQUARE_BRACKET expression L_SQUARE_BRACKET . expressions

    R_SQUARE_BRACKET  shift, and go to state 97

    $default  reduce using rule 53 (expressions)

    expressions  go to state 139


State 134

   60 var: IDENT R_SQUARE_BRACKET expressions L_SQUARE_BRACKET R_SQUARE_BRACKET . expressions L_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 97

    $default  reduce using rule 53 (expressions)

    expressions  go to state 140


State 135

   54 expression_chain: expression COMMA expression_chain .

    $default  reduce using rule 54 (expression_chain)


State 136

   15 statement: IF bool-expr THEN statements ELSE statements . ENDIF

    ENDIF  shift, and go to state 141


State 137

   17 statement: DO BEGINLOOP statements ENDLOOP WHILE bool-expr .

    $default  reduce using rule 17 (statement)


State 138

   18 statement: FOR var ASSIGN NUMBER SEMICOLON bool-expr . SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    SEMICOLON  shift, and go to state 142


State 139

   52 expressions: R_SQUARE_BRACKET expression L_SQUARE_BRACKET expressions .

    $default  reduce using rule 52 (expressions)


State 140

   60 var: IDENT R_SQUARE_BRACKET expressions L_SQUARE_BRACKET R_SQUARE_BRACKET expressions . L_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 143


State 141

   15 statement: IF bool-expr THEN statements ELSE statements ENDIF .

    $default  reduce using rule 15 (statement)


State 142

   18 statement: FOR var ASSIGN NUMBER SEMICOLON bool-expr SEMICOLON . var ASSIGN expression BEGINLOOP statements ENDLOOP

    IDENT  shift, and go to state 38

    var  go to state 144


State 143

   60 var: IDENT R_SQUARE_BRACKET expressions L_SQUARE_BRACKET R_SQUARE_BRACKET expressions L_SQUARE_BRACKET .

    $default  reduce using rule 60 (var)


State 144

   18 statement: FOR var ASSIGN NUMBER SEMICOLON bool-expr SEMICOLON var . ASSIGN expression BEGINLOOP statements ENDLOOP

    ASSIGN  shift, and go to state 145


State 145

   18 statement: FOR var ASSIGN NUMBER SEMICOLON bool-expr SEMICOLON var ASSIGN . expression BEGINLOOP statements ENDLOOP

    L_PAREN  shift, and go to state 60
    NUMBER   shift, and go to state 48
    IDENT    shift, and go to state 49

    term                       go to state 50
    multiplicative_expression  go to state 51
    expression                 go to state 146
    var                        go to state 56


State 146

   18 statement: FOR var ASSIGN NUMBER SEMICOLON bool-expr SEMICOLON var ASSIGN expression . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 147


State 147

   18 statement: FOR var ASSIGN NUMBER SEMICOLON bool-expr SEMICOLON var ASSIGN expression BEGINLOOP . statements ENDLOOP

    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    FOR       shift, and go to state 33
    CONTINUE  shift, and go to state 34
    RETURN    shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    IDENT     shift, and go to state 38

    $default  reduce using rule 12 (statements)

    statements  go to state 148
    statement   go to state 40
    var         go to state 41


State 148

   18 statement: FOR var ASSIGN NUMBER SEMICOLON bool-expr SEMICOLON var ASSIGN expression BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 149


State 149

   18 statement: FOR var ASSIGN NUMBER SEMICOLON bool-expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 18 (statement)
